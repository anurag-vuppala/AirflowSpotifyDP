[2022-01-31 20:59:58,993] {processor.py:163} INFO - Started process (PID=46431) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 20:59:58,994] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 20:59:58,994] {logging_mixin.py:109} INFO - [2022-01-31 20:59:58,994] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 20:59:59,862] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 20:59:59,941] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 20:59:59,945] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:00:00,329] {logging_mixin.py:109} INFO - [2022-01-31 21:00:00,329] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:00:00,352] {logging_mixin.py:109} INFO - [2022-01-31 21:00:00,352] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T20:58:11.660891+00:00
[2022-01-31 21:00:00,370] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.378 seconds
[2022-01-31 21:00:32,556] {processor.py:163} INFO - Started process (PID=46440) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:00:32,556] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:00:32,556] {logging_mixin.py:109} INFO - [2022-01-31 21:00:32,556] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:00:33,497] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:00:33,581] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:00:33,583] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:00:33,590] {logging_mixin.py:109} INFO - [2022-01-31 21:00:33,590] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:00:33,609] {logging_mixin.py:109} INFO - [2022-01-31 21:00:33,609] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T20:58:11.660891+00:00
[2022-01-31 21:00:33,619] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.064 seconds
[2022-01-31 21:01:06,628] {processor.py:163} INFO - Started process (PID=46452) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:06,629] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:01:06,629] {logging_mixin.py:109} INFO - [2022-01-31 21:01:06,629] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:07,497] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:07,583] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:01:07,586] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:01:07,593] {logging_mixin.py:109} INFO - [2022-01-31 21:01:07,592] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:01:07,610] {logging_mixin.py:109} INFO - [2022-01-31 21:01:07,610] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T20:58:11.660891+00:00
[2022-01-31 21:01:07,621] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.994 seconds
[2022-01-31 21:01:39,733] {processor.py:163} INFO - Started process (PID=46468) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:39,733] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:01:39,733] {logging_mixin.py:109} INFO - [2022-01-31 21:01:39,733] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:40,130] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:01:40,184] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:01:40,186] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:01:40,193] {logging_mixin.py:109} INFO - [2022-01-31 21:01:40,193] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:01:40,209] {logging_mixin.py:109} INFO - [2022-01-31 21:01:40,208] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:01:11.660891+00:00
[2022-01-31 21:01:40,227] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.495 seconds
[2022-01-31 21:02:12,124] {processor.py:163} INFO - Started process (PID=46481) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:12,125] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:02:12,125] {logging_mixin.py:109} INFO - [2022-01-31 21:02:12,125] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:13,024] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:13,109] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:02:13,112] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:02:13,118] {logging_mixin.py:109} INFO - [2022-01-31 21:02:13,118] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:02:13,133] {logging_mixin.py:109} INFO - [2022-01-31 21:02:13,133] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:01:11.660891+00:00
[2022-01-31 21:02:13,142] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.019 seconds
[2022-01-31 21:02:45,019] {processor.py:163} INFO - Started process (PID=46484) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:45,019] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:02:45,019] {logging_mixin.py:109} INFO - [2022-01-31 21:02:45,019] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:45,823] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:02:45,910] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:02:45,912] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:02:45,919] {logging_mixin.py:109} INFO - [2022-01-31 21:02:45,919] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:02:45,934] {logging_mixin.py:109} INFO - [2022-01-31 21:02:45,934] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:01:11.660891+00:00
[2022-01-31 21:02:45,944] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.926 seconds
[2022-01-31 21:03:20,346] {processor.py:163} INFO - Started process (PID=46497) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:20,347] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:03:20,347] {logging_mixin.py:109} INFO - [2022-01-31 21:03:20,347] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:21,335] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:21,455] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:03:21,460] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:03:21,474] {logging_mixin.py:109} INFO - [2022-01-31 21:03:21,474] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:03:21,503] {logging_mixin.py:109} INFO - [2022-01-31 21:03:21,503] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:01:11.660891+00:00
[2022-01-31 21:03:21,532] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.187 seconds
[2022-01-31 21:03:53,811] {processor.py:163} INFO - Started process (PID=46499) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:53,812] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:03:53,812] {logging_mixin.py:109} INFO - [2022-01-31 21:03:53,812] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:54,614] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:03:54,700] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:03:54,702] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:03:54,709] {logging_mixin.py:109} INFO - [2022-01-31 21:03:54,709] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:03:54,725] {logging_mixin.py:109} INFO - [2022-01-31 21:03:54,725] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:01:11.660891+00:00
[2022-01-31 21:03:54,737] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.926 seconds
[2022-01-31 21:04:27,371] {processor.py:163} INFO - Started process (PID=46515) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:04:27,372] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:04:27,372] {logging_mixin.py:109} INFO - [2022-01-31 21:04:27,372] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:04:28,244] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:04:28,330] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:04:28,333] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:04:28,339] {logging_mixin.py:109} INFO - [2022-01-31 21:04:28,339] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:04:28,355] {logging_mixin.py:109} INFO - [2022-01-31 21:04:28,355] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:04:11.660891+00:00
[2022-01-31 21:04:28,365] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.994 seconds
[2022-01-31 21:05:01,016] {processor.py:163} INFO - Started process (PID=46531) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:01,017] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:05:01,017] {logging_mixin.py:109} INFO - [2022-01-31 21:05:01,017] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:01,861] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:01,947] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:05:01,950] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:05:01,956] {logging_mixin.py:109} INFO - [2022-01-31 21:05:01,956] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:05:01,976] {logging_mixin.py:109} INFO - [2022-01-31 21:05:01,976] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:04:11.660891+00:00
[2022-01-31 21:05:01,986] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.970 seconds
[2022-01-31 21:05:35,222] {processor.py:163} INFO - Started process (PID=46554) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:35,222] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:05:35,223] {logging_mixin.py:109} INFO - [2022-01-31 21:05:35,223] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:36,667] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:05:36,806] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:05:36,809] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:05:36,818] {logging_mixin.py:109} INFO - [2022-01-31 21:05:36,818] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:05:36,843] {logging_mixin.py:109} INFO - [2022-01-31 21:05:36,843] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:04:11.660891+00:00
[2022-01-31 21:05:36,879] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.658 seconds
[2022-01-31 21:06:10,493] {processor.py:163} INFO - Started process (PID=46564) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:10,493] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:06:10,494] {logging_mixin.py:109} INFO - [2022-01-31 21:06:10,494] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:11,327] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:11,410] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:06:11,412] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:06:11,419] {logging_mixin.py:109} INFO - [2022-01-31 21:06:11,418] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:06:11,434] {logging_mixin.py:109} INFO - [2022-01-31 21:06:11,434] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:04:11.660891+00:00
[2022-01-31 21:06:11,445] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.953 seconds
[2022-01-31 21:06:43,991] {processor.py:163} INFO - Started process (PID=46567) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:43,991] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:06:43,992] {logging_mixin.py:109} INFO - [2022-01-31 21:06:43,992] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:44,747] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:06:44,834] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:06:44,836] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:06:44,843] {logging_mixin.py:109} INFO - [2022-01-31 21:06:44,843] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:06:44,858] {logging_mixin.py:109} INFO - [2022-01-31 21:06:44,858] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:04:11.660891+00:00
[2022-01-31 21:06:44,867] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.877 seconds
[2022-01-31 21:07:19,192] {processor.py:163} INFO - Started process (PID=46571) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:19,192] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:07:19,193] {logging_mixin.py:109} INFO - [2022-01-31 21:07:19,193] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:19,647] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:19,704] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:07:19,708] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:07:19,716] {logging_mixin.py:109} INFO - [2022-01-31 21:07:19,715] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:07:19,747] {logging_mixin.py:109} INFO - [2022-01-31 21:07:19,747] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:07:19,767] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.576 seconds
[2022-01-31 21:07:52,181] {processor.py:163} INFO - Started process (PID=46573) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:52,182] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:07:52,182] {logging_mixin.py:109} INFO - [2022-01-31 21:07:52,182] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:52,983] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:07:53,073] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:07:53,075] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:07:53,082] {logging_mixin.py:109} INFO - [2022-01-31 21:07:53,082] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:07:53,097] {logging_mixin.py:109} INFO - [2022-01-31 21:07:53,097] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:07:53,108] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.928 seconds
[2022-01-31 21:08:25,493] {processor.py:163} INFO - Started process (PID=46579) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:08:25,493] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:08:25,494] {logging_mixin.py:109} INFO - [2022-01-31 21:08:25,494] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:08:26,325] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:08:26,411] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:08:26,413] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:08:26,419] {logging_mixin.py:109} INFO - [2022-01-31 21:08:26,419] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:08:26,434] {logging_mixin.py:109} INFO - [2022-01-31 21:08:26,434] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:08:26,444] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.952 seconds
[2022-01-31 21:08:59,201] {processor.py:163} INFO - Started process (PID=46599) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:08:59,201] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:08:59,202] {logging_mixin.py:109} INFO - [2022-01-31 21:08:59,202] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:09:00,027] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:09:00,116] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:09:00,119] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:09:00,129] {logging_mixin.py:109} INFO - [2022-01-31 21:09:00,129] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:09:00,145] {logging_mixin.py:109} INFO - [2022-01-31 21:09:00,145] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:09:00,155] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.955 seconds
[2022-01-31 21:09:32,290] {processor.py:163} INFO - Started process (PID=46601) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:09:32,290] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:09:32,290] {logging_mixin.py:109} INFO - [2022-01-31 21:09:32,290] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:09:33,083] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:09:33,167] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:09:33,170] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:09:33,177] {logging_mixin.py:109} INFO - [2022-01-31 21:09:33,176] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:09:33,192] {logging_mixin.py:109} INFO - [2022-01-31 21:09:33,192] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:09:33,202] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.913 seconds
[2022-01-31 21:10:05,581] {processor.py:163} INFO - Started process (PID=46604) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:05,582] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:10:05,582] {logging_mixin.py:109} INFO - [2022-01-31 21:10:05,582] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:06,765] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:06,882] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:10:06,885] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:10:06,893] {logging_mixin.py:109} INFO - [2022-01-31 21:10:06,893] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:10:06,916] {logging_mixin.py:109} INFO - [2022-01-31 21:10:06,916] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:07:11.660891+00:00
[2022-01-31 21:10:06,940] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.359 seconds
[2022-01-31 21:10:38,926] {processor.py:163} INFO - Started process (PID=46610) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:38,927] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:10:38,927] {logging_mixin.py:109} INFO - [2022-01-31 21:10:38,927] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:39,325] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:10:39,381] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:10:39,383] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:10:39,390] {logging_mixin.py:109} INFO - [2022-01-31 21:10:39,390] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:10:39,407] {logging_mixin.py:109} INFO - [2022-01-31 21:10:39,407] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:10:11.660891+00:00
[2022-01-31 21:10:39,428] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.503 seconds
[2022-01-31 21:11:11,187] {processor.py:163} INFO - Started process (PID=46617) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:11,187] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:11:11,187] {logging_mixin.py:109} INFO - [2022-01-31 21:11:11,187] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:11,580] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:11,633] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:11:11,635] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:11:11,643] {logging_mixin.py:109} INFO - [2022-01-31 21:11:11,643] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:11:11,658] {logging_mixin.py:109} INFO - [2022-01-31 21:11:11,658] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:10:11.660891+00:00
[2022-01-31 21:11:11,673] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.487 seconds
[2022-01-31 21:11:43,540] {processor.py:163} INFO - Started process (PID=46623) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:43,540] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:11:43,541] {logging_mixin.py:109} INFO - [2022-01-31 21:11:43,541] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:44,331] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:11:44,418] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:11:44,421] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:11:44,428] {logging_mixin.py:109} INFO - [2022-01-31 21:11:44,428] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:11:44,445] {logging_mixin.py:109} INFO - [2022-01-31 21:11:44,445] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:10:11.660891+00:00
[2022-01-31 21:11:44,455] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.916 seconds
[2022-01-31 21:12:16,291] {processor.py:163} INFO - Started process (PID=46628) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:16,291] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:12:16,291] {logging_mixin.py:109} INFO - [2022-01-31 21:12:16,291] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:16,712] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:16,766] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:12:16,769] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:12:16,776] {logging_mixin.py:109} INFO - [2022-01-31 21:12:16,775] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:12:16,791] {logging_mixin.py:109} INFO - [2022-01-31 21:12:16,791] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:10:11.660891+00:00
[2022-01-31 21:12:16,812] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.522 seconds
[2022-01-31 21:12:48,722] {processor.py:163} INFO - Started process (PID=46633) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:48,722] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:12:48,723] {logging_mixin.py:109} INFO - [2022-01-31 21:12:48,723] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:49,311] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:12:49,365] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:12:49,368] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:12:49,385] {logging_mixin.py:109} INFO - [2022-01-31 21:12:49,384] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:12:49,400] {logging_mixin.py:109} INFO - [2022-01-31 21:12:49,400] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:10:11.660891+00:00
[2022-01-31 21:12:49,410] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.689 seconds
[2022-01-31 21:13:21,285] {processor.py:163} INFO - Started process (PID=46636) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:21,286] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:13:21,286] {logging_mixin.py:109} INFO - [2022-01-31 21:13:21,286] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:21,706] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:21,758] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:13:21,761] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:13:21,767] {logging_mixin.py:109} INFO - [2022-01-31 21:13:21,767] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:13:21,782] {logging_mixin.py:109} INFO - [2022-01-31 21:13:21,782] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:13:21,803] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.518 seconds
[2022-01-31 21:13:54,455] {processor.py:163} INFO - Started process (PID=46654) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:54,456] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:13:54,456] {logging_mixin.py:109} INFO - [2022-01-31 21:13:54,456] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:55,299] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:13:55,385] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:13:55,388] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:13:55,395] {logging_mixin.py:109} INFO - [2022-01-31 21:13:55,395] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:13:55,410] {logging_mixin.py:109} INFO - [2022-01-31 21:13:55,410] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:13:55,421] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.966 seconds
[2022-01-31 21:14:27,214] {processor.py:163} INFO - Started process (PID=46698) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:14:27,214] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:14:27,214] {logging_mixin.py:109} INFO - [2022-01-31 21:14:27,214] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:14:27,610] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:14:27,665] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:14:27,667] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:14:27,674] {logging_mixin.py:109} INFO - [2022-01-31 21:14:27,674] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:14:27,690] {logging_mixin.py:109} INFO - [2022-01-31 21:14:27,690] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:14:27,711] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.498 seconds
[2022-01-31 21:14:59,594] {processor.py:163} INFO - Started process (PID=46763) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:14:59,595] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:14:59,595] {logging_mixin.py:109} INFO - [2022-01-31 21:14:59,595] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:15:00,387] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:15:00,472] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:15:00,474] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:15:00,481] {logging_mixin.py:109} INFO - [2022-01-31 21:15:00,481] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:15:00,496] {logging_mixin.py:109} INFO - [2022-01-31 21:15:00,496] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:15:00,507] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.913 seconds
[2022-01-31 21:15:32,320] {processor.py:163} INFO - Started process (PID=46800) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:15:32,320] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:15:32,321] {logging_mixin.py:109} INFO - [2022-01-31 21:15:32,321] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:15:32,717] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:15:32,770] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:15:32,773] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:15:32,779] {logging_mixin.py:109} INFO - [2022-01-31 21:15:32,779] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:15:32,794] {logging_mixin.py:109} INFO - [2022-01-31 21:15:32,794] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:15:32,815] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.495 seconds
[2022-01-31 21:16:04,690] {processor.py:163} INFO - Started process (PID=46839) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:04,691] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:16:04,691] {logging_mixin.py:109} INFO - [2022-01-31 21:16:04,691] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:05,490] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:05,577] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:16:05,580] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:16:05,586] {logging_mixin.py:109} INFO - [2022-01-31 21:16:05,586] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:16:05,601] {logging_mixin.py:109} INFO - [2022-01-31 21:16:05,601] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:13:11.660891+00:00
[2022-01-31 21:16:05,612] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.922 seconds
[2022-01-31 21:16:37,488] {processor.py:163} INFO - Started process (PID=46878) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:37,488] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:16:37,489] {logging_mixin.py:109} INFO - [2022-01-31 21:16:37,489] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:37,936] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:16:37,990] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:16:37,992] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:16:37,999] {logging_mixin.py:109} INFO - [2022-01-31 21:16:37,999] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:16:38,014] {logging_mixin.py:109} INFO - [2022-01-31 21:16:38,014] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:16:11.660891+00:00
[2022-01-31 21:16:38,034] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.547 seconds
[2022-01-31 21:17:09,860] {processor.py:163} INFO - Started process (PID=46924) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:09,860] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:17:09,861] {logging_mixin.py:109} INFO - [2022-01-31 21:17:09,861] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:10,469] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:10,558] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:17:10,560] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:17:10,567] {logging_mixin.py:109} INFO - [2022-01-31 21:17:10,567] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:17:10,584] {logging_mixin.py:109} INFO - [2022-01-31 21:17:10,584] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:16:11.660891+00:00
[2022-01-31 21:17:10,593] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.734 seconds
[2022-01-31 21:17:42,453] {processor.py:163} INFO - Started process (PID=46961) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:42,453] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:17:42,453] {logging_mixin.py:109} INFO - [2022-01-31 21:17:42,453] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:42,855] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:17:42,908] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:17:42,910] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:17:42,917] {logging_mixin.py:109} INFO - [2022-01-31 21:17:42,917] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:17:42,932] {logging_mixin.py:109} INFO - [2022-01-31 21:17:42,932] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:16:11.660891+00:00
[2022-01-31 21:17:42,953] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.501 seconds
[2022-01-31 21:18:14,789] {processor.py:163} INFO - Started process (PID=47008) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:14,789] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:18:14,790] {logging_mixin.py:109} INFO - [2022-01-31 21:18:14,790] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:15,604] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:15,691] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:18:15,694] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:18:15,701] {logging_mixin.py:109} INFO - [2022-01-31 21:18:15,700] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:18:15,716] {logging_mixin.py:109} INFO - [2022-01-31 21:18:15,716] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:16:11.660891+00:00
[2022-01-31 21:18:15,726] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.937 seconds
[2022-01-31 21:18:47,718] {processor.py:163} INFO - Started process (PID=47047) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:47,718] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:18:47,718] {logging_mixin.py:109} INFO - [2022-01-31 21:18:47,718] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:48,569] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:18:48,678] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:18:48,680] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:18:48,687] {logging_mixin.py:109} INFO - [2022-01-31 21:18:48,686] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:18:48,702] {logging_mixin.py:109} INFO - [2022-01-31 21:18:48,702] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:16:11.660891+00:00
[2022-01-31 21:18:48,712] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.995 seconds
[2022-01-31 21:19:20,614] {processor.py:163} INFO - Started process (PID=47088) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:20,615] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:19:20,615] {logging_mixin.py:109} INFO - [2022-01-31 21:19:20,615] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:21,119] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:21,175] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:19:21,177] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:19:21,184] {logging_mixin.py:109} INFO - [2022-01-31 21:19:21,183] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:19:21,199] {logging_mixin.py:109} INFO - [2022-01-31 21:19:21,199] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:19:21,219] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.606 seconds
[2022-01-31 21:19:53,254] {processor.py:163} INFO - Started process (PID=47142) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:53,254] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:19:53,255] {logging_mixin.py:109} INFO - [2022-01-31 21:19:53,254] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:54,105] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:19:54,191] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:19:54,194] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:19:54,202] {logging_mixin.py:109} INFO - [2022-01-31 21:19:54,201] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:19:54,217] {logging_mixin.py:109} INFO - [2022-01-31 21:19:54,217] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:19:54,227] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.974 seconds
[2022-01-31 21:20:26,348] {processor.py:163} INFO - Started process (PID=47188) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:20:26,348] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:20:26,349] {logging_mixin.py:109} INFO - [2022-01-31 21:20:26,348] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:20:27,192] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:20:27,293] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:20:27,296] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:20:27,302] {logging_mixin.py:109} INFO - [2022-01-31 21:20:27,302] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:20:27,317] {logging_mixin.py:109} INFO - [2022-01-31 21:20:27,317] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:20:27,327] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.980 seconds
[2022-01-31 21:20:59,929] {processor.py:163} INFO - Started process (PID=47234) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:20:59,930] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:20:59,930] {logging_mixin.py:109} INFO - [2022-01-31 21:20:59,930] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:21:00,673] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:21:00,757] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:21:00,760] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:21:00,768] {logging_mixin.py:109} INFO - [2022-01-31 21:21:00,768] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:21:00,784] {logging_mixin.py:109} INFO - [2022-01-31 21:21:00,784] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:21:00,795] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.866 seconds
[2022-01-31 21:21:33,360] {processor.py:163} INFO - Started process (PID=47284) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:21:33,360] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:21:33,361] {logging_mixin.py:109} INFO - [2022-01-31 21:21:33,361] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:21:34,136] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:21:34,222] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:21:34,224] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:21:34,231] {logging_mixin.py:109} INFO - [2022-01-31 21:21:34,231] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:21:34,246] {logging_mixin.py:109} INFO - [2022-01-31 21:21:34,246] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:21:34,256] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.896 seconds
[2022-01-31 21:22:06,754] {processor.py:163} INFO - Started process (PID=47323) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:06,754] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:22:06,755] {logging_mixin.py:109} INFO - [2022-01-31 21:22:06,755] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:07,532] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:07,618] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:22:07,620] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:22:07,627] {logging_mixin.py:109} INFO - [2022-01-31 21:22:07,627] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:22:07,642] {logging_mixin.py:109} INFO - [2022-01-31 21:22:07,642] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:19:11.660891+00:00
[2022-01-31 21:22:07,652] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.899 seconds
[2022-01-31 21:22:40,235] {processor.py:163} INFO - Started process (PID=47364) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:40,235] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:22:40,236] {logging_mixin.py:109} INFO - [2022-01-31 21:22:40,236] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:41,106] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:22:41,202] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:22:41,207] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:22:41,216] {logging_mixin.py:109} INFO - [2022-01-31 21:22:41,215] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:22:41,233] {logging_mixin.py:109} INFO - [2022-01-31 21:22:41,233] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:22:11.660891+00:00
[2022-01-31 21:22:41,245] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.011 seconds
[2022-01-31 21:23:13,075] {processor.py:163} INFO - Started process (PID=47408) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:13,075] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:23:13,076] {logging_mixin.py:109} INFO - [2022-01-31 21:23:13,076] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:13,468] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:13,521] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:23:13,523] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:23:13,530] {logging_mixin.py:109} INFO - [2022-01-31 21:23:13,530] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:23:13,546] {logging_mixin.py:109} INFO - [2022-01-31 21:23:13,546] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:22:11.660891+00:00
[2022-01-31 21:23:13,566] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.492 seconds
[2022-01-31 21:23:45,648] {processor.py:163} INFO - Started process (PID=47448) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:45,649] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:23:45,649] {logging_mixin.py:109} INFO - [2022-01-31 21:23:45,649] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:46,459] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:23:46,545] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:23:46,548] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:23:46,560] {logging_mixin.py:109} INFO - [2022-01-31 21:23:46,560] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:23:46,582] {logging_mixin.py:109} INFO - [2022-01-31 21:23:46,581] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:22:11.660891+00:00
[2022-01-31 21:23:46,595] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.948 seconds
[2022-01-31 21:24:18,462] {processor.py:163} INFO - Started process (PID=47489) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:18,463] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:24:18,463] {logging_mixin.py:109} INFO - [2022-01-31 21:24:18,463] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:18,858] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:18,912] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:24:18,915] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:24:18,921] {logging_mixin.py:109} INFO - [2022-01-31 21:24:18,921] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:24:18,937] {logging_mixin.py:109} INFO - [2022-01-31 21:24:18,937] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:22:11.660891+00:00
[2022-01-31 21:24:18,958] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.496 seconds
[2022-01-31 21:24:50,943] {processor.py:163} INFO - Started process (PID=47528) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:50,943] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:24:50,944] {logging_mixin.py:109} INFO - [2022-01-31 21:24:50,944] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:51,438] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:24:51,503] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:24:51,506] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:24:51,514] {logging_mixin.py:109} INFO - [2022-01-31 21:24:51,514] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:24:51,533] {logging_mixin.py:109} INFO - [2022-01-31 21:24:51,533] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:22:11.660891+00:00
[2022-01-31 21:24:51,544] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.602 seconds
[2022-01-31 21:25:24,133] {processor.py:163} INFO - Started process (PID=47572) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:24,133] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:25:24,134] {logging_mixin.py:109} INFO - [2022-01-31 21:25:24,134] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:24,844] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:24,938] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:25:24,940] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:25:24,947] {logging_mixin.py:109} INFO - [2022-01-31 21:25:24,947] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:25:24,965] {logging_mixin.py:109} INFO - [2022-01-31 21:25:24,964] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:25:11.660891+00:00
[2022-01-31 21:25:24,974] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.842 seconds
[2022-01-31 21:25:56,863] {processor.py:163} INFO - Started process (PID=47622) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:56,864] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:25:56,864] {logging_mixin.py:109} INFO - [2022-01-31 21:25:56,864] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:57,326] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:25:57,379] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:25:57,381] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:25:57,388] {logging_mixin.py:109} INFO - [2022-01-31 21:25:57,388] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:25:57,403] {logging_mixin.py:109} INFO - [2022-01-31 21:25:57,403] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:25:11.660891+00:00
[2022-01-31 21:25:57,423] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.561 seconds
[2022-01-31 21:26:29,248] {processor.py:163} INFO - Started process (PID=47661) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:26:29,248] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:26:29,248] {logging_mixin.py:109} INFO - [2022-01-31 21:26:29,248] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:26:29,767] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:26:29,822] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:26:29,824] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:26:29,830] {logging_mixin.py:109} INFO - [2022-01-31 21:26:29,830] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:26:29,846] {logging_mixin.py:109} INFO - [2022-01-31 21:26:29,846] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:25:11.660891+00:00
[2022-01-31 21:26:29,856] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.609 seconds
[2022-01-31 21:27:02,356] {processor.py:163} INFO - Started process (PID=47702) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:02,356] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:27:02,357] {logging_mixin.py:109} INFO - [2022-01-31 21:27:02,357] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:03,180] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:03,267] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:27:03,270] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:27:03,278] {logging_mixin.py:109} INFO - [2022-01-31 21:27:03,277] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:27:03,298] {logging_mixin.py:109} INFO - [2022-01-31 21:27:03,298] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:25:11.660891+00:00
[2022-01-31 21:27:03,311] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.956 seconds
[2022-01-31 21:27:40,719] {processor.py:163} INFO - Started process (PID=47724) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:40,719] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:27:40,719] {logging_mixin.py:109} INFO - [2022-01-31 21:27:40,719] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:41,994] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:27:42,080] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:27:42,082] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:27:42,089] {logging_mixin.py:109} INFO - [2022-01-31 21:27:42,089] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:27:42,105] {logging_mixin.py:109} INFO - [2022-01-31 21:27:42,105] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:25:11.660891+00:00
[2022-01-31 21:27:42,116] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.398 seconds
[2022-01-31 21:28:23,217] {processor.py:163} INFO - Started process (PID=47738) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:23,217] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:28:23,218] {logging_mixin.py:109} INFO - [2022-01-31 21:28:23,218] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:23,861] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:23,968] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:28:23,972] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:28:23,984] {logging_mixin.py:109} INFO - [2022-01-31 21:28:23,983] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:28:24,018] {logging_mixin.py:109} INFO - [2022-01-31 21:28:24,018] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:11.660891+00:00
[2022-01-31 21:28:24,038] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.822 seconds
[2022-01-31 21:28:57,572] {processor.py:163} INFO - Started process (PID=47741) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:57,572] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:28:57,573] {logging_mixin.py:109} INFO - [2022-01-31 21:28:57,573] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:58,723] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:28:58,812] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:28:58,815] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:28:58,821] {logging_mixin.py:109} INFO - [2022-01-31 21:28:58,821] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:28:58,837] {logging_mixin.py:109} INFO - [2022-01-31 21:28:58,837] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:11.660891+00:00
[2022-01-31 21:28:58,846] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.276 seconds
[2022-01-31 21:29:31,544] {processor.py:163} INFO - Started process (PID=47751) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:29:31,544] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:29:31,545] {logging_mixin.py:109} INFO - [2022-01-31 21:29:31,545] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:29:32,179] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:29:32,238] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:29:32,241] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:29:32,249] {logging_mixin.py:109} INFO - [2022-01-31 21:29:32,249] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:29:32,270] {logging_mixin.py:109} INFO - [2022-01-31 21:29:32,270] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:11.660891+00:00
[2022-01-31 21:29:32,282] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.739 seconds
[2022-01-31 21:30:04,793] {processor.py:163} INFO - Started process (PID=47755) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:04,794] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:30:04,794] {logging_mixin.py:109} INFO - [2022-01-31 21:30:04,794] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:05,615] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:05,691] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:30:05,694] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:30:05,700] {logging_mixin.py:109} INFO - [2022-01-31 21:30:05,700] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:30:05,716] {logging_mixin.py:109} INFO - [2022-01-31 21:30:05,716] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:11.660891+00:00
[2022-01-31 21:30:05,727] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.934 seconds
[2022-01-31 21:30:38,437] {processor.py:163} INFO - Started process (PID=47771) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:38,437] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:30:38,440] {logging_mixin.py:109} INFO - [2022-01-31 21:30:38,439] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:39,336] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:30:39,423] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:30:39,426] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:30:39,433] {logging_mixin.py:109} INFO - [2022-01-31 21:30:39,433] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:30:39,453] {logging_mixin.py:109} INFO - [2022-01-31 21:30:39,453] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:11.660891+00:00
[2022-01-31 21:30:39,481] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.046 seconds
[2022-01-31 21:31:12,118] {processor.py:163} INFO - Started process (PID=47780) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:12,118] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:31:12,119] {logging_mixin.py:109} INFO - [2022-01-31 21:31:12,119] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:12,981] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:13,069] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:31:13,072] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:31:13,079] {logging_mixin.py:109} INFO - [2022-01-31 21:31:13,079] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:31:13,096] {logging_mixin.py:109} INFO - [2022-01-31 21:31:13,095] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:28:13.095811+00:00
[2022-01-31 21:31:13,106] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.989 seconds
[2022-01-31 21:31:45,591] {processor.py:163} INFO - Started process (PID=47786) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:45,592] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:31:45,592] {logging_mixin.py:109} INFO - [2022-01-31 21:31:45,592] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:46,459] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:31:46,548] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:31:46,551] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:31:46,557] {logging_mixin.py:109} INFO - [2022-01-31 21:31:46,557] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:31:46,573] {logging_mixin.py:109} INFO - [2022-01-31 21:31:46,573] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:31:13.095811+00:00
[2022-01-31 21:31:46,582] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.992 seconds
[2022-01-31 21:32:19,350] {processor.py:163} INFO - Started process (PID=47788) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:19,350] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:32:19,350] {logging_mixin.py:109} INFO - [2022-01-31 21:32:19,350] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:20,213] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:20,325] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:32:20,327] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:32:20,334] {logging_mixin.py:109} INFO - [2022-01-31 21:32:20,334] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:32:20,351] {logging_mixin.py:109} INFO - [2022-01-31 21:32:20,350] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:31:13.095811+00:00
[2022-01-31 21:32:20,362] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.013 seconds
[2022-01-31 21:32:53,202] {processor.py:163} INFO - Started process (PID=47790) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:53,203] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:32:53,203] {logging_mixin.py:109} INFO - [2022-01-31 21:32:53,203] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:54,203] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:32:54,296] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:32:54,298] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:32:54,305] {logging_mixin.py:109} INFO - [2022-01-31 21:32:54,305] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:32:54,324] {logging_mixin.py:109} INFO - [2022-01-31 21:32:54,324] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:31:13.095811+00:00
[2022-01-31 21:32:54,338] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.137 seconds
[2022-01-31 21:33:26,930] {processor.py:163} INFO - Started process (PID=47824) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:33:26,930] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:33:26,930] {logging_mixin.py:109} INFO - [2022-01-31 21:33:26,930] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:33:27,760] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:33:27,849] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:33:27,852] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:33:27,859] {logging_mixin.py:109} INFO - [2022-01-31 21:33:27,858] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:33:27,873] {logging_mixin.py:109} INFO - [2022-01-31 21:33:27,873] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:31:13.095811+00:00
[2022-01-31 21:33:27,883] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 0.954 seconds
[2022-01-31 21:34:00,496] {processor.py:163} INFO - Started process (PID=47827) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:00,505] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:34:00,506] {logging_mixin.py:109} INFO - [2022-01-31 21:34:00,506] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:01,593] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:01,697] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:34:01,702] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:34:01,711] {logging_mixin.py:109} INFO - [2022-01-31 21:34:01,711] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:34:01,739] {logging_mixin.py:109} INFO - [2022-01-31 21:34:01,739] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:31:13.095811+00:00
[2022-01-31 21:34:01,757] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.262 seconds
[2022-01-31 21:34:34,709] {processor.py:163} INFO - Started process (PID=47839) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:34,709] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:34:34,710] {logging_mixin.py:109} INFO - [2022-01-31 21:34:34,710] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:35,758] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:34:35,846] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:34:35,849] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:34:35,855] {logging_mixin.py:109} INFO - [2022-01-31 21:34:35,855] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:34:35,871] {logging_mixin.py:109} INFO - [2022-01-31 21:34:35,871] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:34:13.095811+00:00
[2022-01-31 21:34:35,881] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.173 seconds
[2022-01-31 21:35:11,583] {processor.py:163} INFO - Started process (PID=47894) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:11,584] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:35:11,585] {logging_mixin.py:109} INFO - [2022-01-31 21:35:11,585] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:12,950] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:13,125] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:35:13,130] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:35:13,153] {logging_mixin.py:109} INFO - [2022-01-31 21:35:13,153] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:35:13,209] {logging_mixin.py:109} INFO - [2022-01-31 21:35:13,209] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:34:13.095811+00:00
[2022-01-31 21:35:13,243] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.663 seconds
[2022-01-31 21:35:51,008] {processor.py:163} INFO - Started process (PID=47945) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:51,009] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:35:51,010] {logging_mixin.py:109} INFO - [2022-01-31 21:35:51,010] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:52,168] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:35:52,395] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:35:52,404] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:35:52,446] {logging_mixin.py:109} INFO - [2022-01-31 21:35:52,446] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:35:52,588] {logging_mixin.py:109} INFO - [2022-01-31 21:35:52,588] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:34:13.095811+00:00
[2022-01-31 21:35:52,611] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.604 seconds
[2022-01-31 21:36:29,259] {processor.py:163} INFO - Started process (PID=48004) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:36:29,259] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:36:29,260] {logging_mixin.py:109} INFO - [2022-01-31 21:36:29,260] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:36:30,813] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:36:31,057] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:36:31,072] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:36:31,092] {logging_mixin.py:109} INFO - [2022-01-31 21:36:31,092] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:36:31,135] {logging_mixin.py:109} INFO - [2022-01-31 21:36:31,135] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:34:13.095811+00:00
[2022-01-31 21:36:31,160] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.902 seconds
[2022-01-31 21:37:07,620] {processor.py:163} INFO - Started process (PID=48056) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:07,622] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:37:07,623] {logging_mixin.py:109} INFO - [2022-01-31 21:37:07,623] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:09,367] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:09,528] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:37:09,532] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:37:09,559] {logging_mixin.py:109} INFO - [2022-01-31 21:37:09,559] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:37:09,615] {logging_mixin.py:109} INFO - [2022-01-31 21:37:09,615] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:34:13.095811+00:00
[2022-01-31 21:37:09,641] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.025 seconds
[2022-01-31 21:37:47,307] {processor.py:163} INFO - Started process (PID=48105) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:47,307] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:37:47,308] {logging_mixin.py:109} INFO - [2022-01-31 21:37:47,308] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:48,999] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:37:49,150] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:37:49,153] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:37:49,180] {logging_mixin.py:109} INFO - [2022-01-31 21:37:49,179] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:37:49,212] {logging_mixin.py:109} INFO - [2022-01-31 21:37:49,211] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:37:13.095811+00:00
[2022-01-31 21:37:49,228] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.924 seconds
[2022-01-31 21:38:25,124] {processor.py:163} INFO - Started process (PID=48152) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:38:25,124] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:38:25,128] {logging_mixin.py:109} INFO - [2022-01-31 21:38:25,128] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:38:26,350] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:38:26,480] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:38:26,485] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:38:26,511] {logging_mixin.py:109} INFO - [2022-01-31 21:38:26,511] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:38:26,557] {logging_mixin.py:109} INFO - [2022-01-31 21:38:26,556] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:37:13.095811+00:00
[2022-01-31 21:38:26,580] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.457 seconds
[2022-01-31 21:39:02,452] {processor.py:163} INFO - Started process (PID=48233) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:02,452] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:39:02,453] {logging_mixin.py:109} INFO - [2022-01-31 21:39:02,453] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:03,608] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:03,863] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:39:03,877] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:39:03,890] {logging_mixin.py:109} INFO - [2022-01-31 21:39:03,890] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:39:03,925] {logging_mixin.py:109} INFO - [2022-01-31 21:39:03,925] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:37:13.095811+00:00
[2022-01-31 21:39:03,970] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.519 seconds
[2022-01-31 21:39:38,788] {processor.py:163} INFO - Started process (PID=48295) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:38,789] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:39:38,790] {logging_mixin.py:109} INFO - [2022-01-31 21:39:38,789] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:39,931] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:39:40,145] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:39:40,150] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:39:40,197] {logging_mixin.py:109} INFO - [2022-01-31 21:39:40,196] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:39:40,293] {logging_mixin.py:109} INFO - [2022-01-31 21:39:40,293] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:37:13.095811+00:00
[2022-01-31 21:39:40,321] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.534 seconds
[2022-01-31 21:40:14,959] {processor.py:163} INFO - Started process (PID=48354) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:14,960] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:40:14,960] {logging_mixin.py:109} INFO - [2022-01-31 21:40:14,960] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:16,142] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:16,273] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:40:16,278] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:40:16,293] {logging_mixin.py:109} INFO - [2022-01-31 21:40:16,293] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:40:16,342] {logging_mixin.py:109} INFO - [2022-01-31 21:40:16,342] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:37:16.341989+00:00
[2022-01-31 21:40:16,362] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.404 seconds
[2022-01-31 21:40:54,610] {processor.py:163} INFO - Started process (PID=48429) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:54,610] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:40:54,611] {logging_mixin.py:109} INFO - [2022-01-31 21:40:54,611] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:57,409] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:40:57,644] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:40:57,675] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:40:57,696] {logging_mixin.py:109} INFO - [2022-01-31 21:40:57,695] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:40:57,752] {logging_mixin.py:109} INFO - [2022-01-31 21:40:57,752] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:40:16.341989+00:00
[2022-01-31 21:40:57,774] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 3.167 seconds
[2022-01-31 21:41:33,275] {processor.py:163} INFO - Started process (PID=48541) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:41:33,276] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:41:33,276] {logging_mixin.py:109} INFO - [2022-01-31 21:41:33,276] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:41:34,570] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:41:34,698] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:41:34,703] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:41:34,718] {logging_mixin.py:109} INFO - [2022-01-31 21:41:34,717] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:41:34,755] {logging_mixin.py:109} INFO - [2022-01-31 21:41:34,755] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:40:16.341989+00:00
[2022-01-31 21:41:34,789] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.515 seconds
[2022-01-31 21:42:09,679] {processor.py:163} INFO - Started process (PID=48600) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:09,680] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:42:09,680] {logging_mixin.py:109} INFO - [2022-01-31 21:42:09,680] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:10,699] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:10,854] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:42:10,859] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:42:10,877] {logging_mixin.py:109} INFO - [2022-01-31 21:42:10,876] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:42:10,925] {logging_mixin.py:109} INFO - [2022-01-31 21:42:10,925] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:40:16.341989+00:00
[2022-01-31 21:42:10,956] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.285 seconds
[2022-01-31 21:42:46,795] {processor.py:163} INFO - Started process (PID=48658) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:46,798] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:42:46,799] {logging_mixin.py:109} INFO - [2022-01-31 21:42:46,799] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:47,853] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:42:47,977] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:42:47,981] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:42:47,999] {logging_mixin.py:109} INFO - [2022-01-31 21:42:47,998] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:42:48,034] {logging_mixin.py:109} INFO - [2022-01-31 21:42:48,034] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:40:16.341989+00:00
[2022-01-31 21:42:48,050] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.257 seconds
[2022-01-31 21:43:36,931] {processor.py:163} INFO - Started process (PID=48711) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:43:36,931] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:43:36,932] {logging_mixin.py:109} INFO - [2022-01-31 21:43:36,932] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:43:38,874] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:43:39,068] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:43:39,077] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:43:39,101] {logging_mixin.py:109} INFO - [2022-01-31 21:43:39,101] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:43:39,163] {logging_mixin.py:109} INFO - [2022-01-31 21:43:39,163] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:43:16.341989+00:00
[2022-01-31 21:43:39,210] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.280 seconds
[2022-01-31 21:44:15,764] {processor.py:163} INFO - Started process (PID=48761) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:15,769] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:44:15,769] {logging_mixin.py:109} INFO - [2022-01-31 21:44:15,769] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:17,027] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:17,223] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:44:17,257] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:44:17,274] {logging_mixin.py:109} INFO - [2022-01-31 21:44:17,274] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:44:17,322] {logging_mixin.py:109} INFO - [2022-01-31 21:44:17,322] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:43:16.341989+00:00
[2022-01-31 21:44:17,355] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.593 seconds
[2022-01-31 21:44:52,759] {processor.py:163} INFO - Started process (PID=48825) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:52,760] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:44:52,761] {logging_mixin.py:109} INFO - [2022-01-31 21:44:52,760] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:54,013] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:44:54,174] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:44:54,181] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:44:54,199] {logging_mixin.py:109} INFO - [2022-01-31 21:44:54,199] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:44:54,259] {logging_mixin.py:109} INFO - [2022-01-31 21:44:54,259] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:43:16.341989+00:00
[2022-01-31 21:44:54,290] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.532 seconds
[2022-01-31 21:45:28,830] {processor.py:163} INFO - Started process (PID=48887) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:45:28,830] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:45:28,831] {logging_mixin.py:109} INFO - [2022-01-31 21:45:28,831] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:45:29,725] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:45:29,857] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:45:29,877] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:45:29,890] {logging_mixin.py:109} INFO - [2022-01-31 21:45:29,890] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:45:29,931] {logging_mixin.py:109} INFO - [2022-01-31 21:45:29,931] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:43:16.341989+00:00
[2022-01-31 21:45:29,951] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.122 seconds
[2022-01-31 21:46:04,675] {processor.py:163} INFO - Started process (PID=48952) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:04,675] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:46:04,677] {logging_mixin.py:109} INFO - [2022-01-31 21:46:04,677] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:05,636] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:05,771] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:46:05,776] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:46:05,801] {logging_mixin.py:109} INFO - [2022-01-31 21:46:05,801] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:46:05,860] {logging_mixin.py:109} INFO - [2022-01-31 21:46:05,860] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:43:16.341989+00:00
[2022-01-31 21:46:05,891] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.217 seconds
[2022-01-31 21:46:40,952] {processor.py:163} INFO - Started process (PID=49015) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:40,953] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:46:40,954] {logging_mixin.py:109} INFO - [2022-01-31 21:46:40,954] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:42,020] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:46:42,147] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:46:42,151] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:46:42,168] {logging_mixin.py:109} INFO - [2022-01-31 21:46:42,167] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:46:42,204] {logging_mixin.py:109} INFO - [2022-01-31 21:46:42,204] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:46:16.341989+00:00
[2022-01-31 21:46:42,220] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.268 seconds
[2022-01-31 21:47:16,883] {processor.py:163} INFO - Started process (PID=49084) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:16,887] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:47:16,888] {logging_mixin.py:109} INFO - [2022-01-31 21:47:16,888] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:17,850] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:17,988] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:47:17,997] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:47:18,014] {logging_mixin.py:109} INFO - [2022-01-31 21:47:18,014] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:47:18,057] {logging_mixin.py:109} INFO - [2022-01-31 21:47:18,057] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:46:16.341989+00:00
[2022-01-31 21:47:18,078] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.196 seconds
[2022-01-31 21:47:54,739] {processor.py:163} INFO - Started process (PID=49123) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:54,740] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:47:54,741] {logging_mixin.py:109} INFO - [2022-01-31 21:47:54,741] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:55,929] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:47:56,197] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:47:56,202] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:47:56,216] {logging_mixin.py:109} INFO - [2022-01-31 21:47:56,216] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:47:56,262] {logging_mixin.py:109} INFO - [2022-01-31 21:47:56,262] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:46:16.341989+00:00
[2022-01-31 21:47:56,280] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.542 seconds
[2022-01-31 21:48:30,956] {processor.py:163} INFO - Started process (PID=49186) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:48:30,956] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:48:30,957] {logging_mixin.py:109} INFO - [2022-01-31 21:48:30,957] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:48:32,078] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:48:32,242] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:48:32,249] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:48:32,266] {logging_mixin.py:109} INFO - [2022-01-31 21:48:32,265] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:48:32,296] {logging_mixin.py:109} INFO - [2022-01-31 21:48:32,296] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:46:16.341989+00:00
[2022-01-31 21:48:32,317] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.362 seconds
[2022-01-31 21:49:06,986] {processor.py:163} INFO - Started process (PID=49245) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:06,991] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:49:06,991] {logging_mixin.py:109} INFO - [2022-01-31 21:49:06,991] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:07,961] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:08,099] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:49:08,105] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:49:08,122] {logging_mixin.py:109} INFO - [2022-01-31 21:49:08,122] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:49:08,155] {logging_mixin.py:109} INFO - [2022-01-31 21:49:08,155] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:46:16.341989+00:00
[2022-01-31 21:49:08,178] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.192 seconds
[2022-01-31 21:49:43,003] {processor.py:163} INFO - Started process (PID=49304) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:43,003] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:49:43,004] {logging_mixin.py:109} INFO - [2022-01-31 21:49:43,004] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:44,076] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:49:44,227] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:49:44,231] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:49:44,251] {logging_mixin.py:109} INFO - [2022-01-31 21:49:44,251] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:49:44,292] {logging_mixin.py:109} INFO - [2022-01-31 21:49:44,292] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:49:16.341989+00:00
[2022-01-31 21:49:44,320] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.318 seconds
[2022-01-31 21:50:18,846] {processor.py:163} INFO - Started process (PID=49366) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:18,847] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:50:18,847] {logging_mixin.py:109} INFO - [2022-01-31 21:50:18,847] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:20,004] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:20,205] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:50:20,215] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:50:20,231] {logging_mixin.py:109} INFO - [2022-01-31 21:50:20,231] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:50:20,280] {logging_mixin.py:109} INFO - [2022-01-31 21:50:20,280] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:49:16.341989+00:00
[2022-01-31 21:50:20,303] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.457 seconds
[2022-01-31 21:50:54,805] {processor.py:163} INFO - Started process (PID=49426) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:54,806] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:50:54,806] {logging_mixin.py:109} INFO - [2022-01-31 21:50:54,806] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:55,884] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:50:56,029] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:50:56,038] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:50:56,061] {logging_mixin.py:109} INFO - [2022-01-31 21:50:56,060] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:50:56,106] {logging_mixin.py:109} INFO - [2022-01-31 21:50:56,105] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:49:16.341989+00:00
[2022-01-31 21:50:56,125] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.321 seconds
[2022-01-31 21:51:30,498] {processor.py:163} INFO - Started process (PID=49489) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:51:30,498] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:51:30,499] {logging_mixin.py:109} INFO - [2022-01-31 21:51:30,499] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:51:31,474] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:51:31,650] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:51:31,654] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:51:31,675] {logging_mixin.py:109} INFO - [2022-01-31 21:51:31,675] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:51:31,743] {logging_mixin.py:109} INFO - [2022-01-31 21:51:31,743] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:49:16.341989+00:00
[2022-01-31 21:51:31,766] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.270 seconds
[2022-01-31 21:52:06,287] {processor.py:163} INFO - Started process (PID=49549) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:06,287] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:52:06,288] {logging_mixin.py:109} INFO - [2022-01-31 21:52:06,288] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:07,327] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:07,462] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:52:07,466] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:52:07,476] {logging_mixin.py:109} INFO - [2022-01-31 21:52:07,476] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:52:07,512] {logging_mixin.py:109} INFO - [2022-01-31 21:52:07,512] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:49:16.341989+00:00
[2022-01-31 21:52:07,535] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.251 seconds
[2022-01-31 21:52:42,132] {processor.py:163} INFO - Started process (PID=49606) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:42,132] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:52:42,133] {logging_mixin.py:109} INFO - [2022-01-31 21:52:42,132] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:43,085] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:52:43,219] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:52:43,223] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:52:43,237] {logging_mixin.py:109} INFO - [2022-01-31 21:52:43,237] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:52:43,272] {logging_mixin.py:109} INFO - [2022-01-31 21:52:43,272] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:52:16.341989+00:00
[2022-01-31 21:52:43,290] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.159 seconds
[2022-01-31 21:53:17,795] {processor.py:163} INFO - Started process (PID=49669) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:17,796] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:53:17,796] {logging_mixin.py:109} INFO - [2022-01-31 21:53:17,796] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:19,116] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:19,278] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:53:19,282] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:53:19,295] {logging_mixin.py:109} INFO - [2022-01-31 21:53:19,294] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:53:19,336] {logging_mixin.py:109} INFO - [2022-01-31 21:53:19,336] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:52:16.341989+00:00
[2022-01-31 21:53:19,358] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.564 seconds
[2022-01-31 21:53:54,007] {processor.py:163} INFO - Started process (PID=49728) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:54,008] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:53:54,009] {logging_mixin.py:109} INFO - [2022-01-31 21:53:54,009] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:55,217] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:53:55,389] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:53:55,394] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:53:55,407] {logging_mixin.py:109} INFO - [2022-01-31 21:53:55,407] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:53:55,455] {logging_mixin.py:109} INFO - [2022-01-31 21:53:55,455] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:52:16.341989+00:00
[2022-01-31 21:53:55,471] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.464 seconds
[2022-01-31 21:54:30,133] {processor.py:163} INFO - Started process (PID=49786) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:54:30,133] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:54:30,134] {logging_mixin.py:109} INFO - [2022-01-31 21:54:30,134] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:54:31,100] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:54:31,239] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:54:31,249] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:54:31,262] {logging_mixin.py:109} INFO - [2022-01-31 21:54:31,261] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:54:31,314] {logging_mixin.py:109} INFO - [2022-01-31 21:54:31,313] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:52:16.341989+00:00
[2022-01-31 21:54:31,329] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.197 seconds
[2022-01-31 21:55:05,834] {processor.py:163} INFO - Started process (PID=49844) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:05,834] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:55:05,835] {logging_mixin.py:109} INFO - [2022-01-31 21:55:05,835] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:06,779] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:06,928] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:55:06,934] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:55:06,955] {logging_mixin.py:109} INFO - [2022-01-31 21:55:06,955] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:55:07,017] {logging_mixin.py:109} INFO - [2022-01-31 21:55:07,017] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:52:16.341989+00:00
[2022-01-31 21:55:07,041] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.208 seconds
[2022-01-31 21:55:41,927] {processor.py:163} INFO - Started process (PID=49901) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:41,928] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:55:41,928] {logging_mixin.py:109} INFO - [2022-01-31 21:55:41,928] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:42,858] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:55:43,021] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:55:43,026] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:55:43,049] {logging_mixin.py:109} INFO - [2022-01-31 21:55:43,049] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:55:43,080] {logging_mixin.py:109} INFO - [2022-01-31 21:55:43,079] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:55:16.341989+00:00
[2022-01-31 21:55:43,112] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.187 seconds
[2022-01-31 21:56:17,442] {processor.py:163} INFO - Started process (PID=49963) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:17,442] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:56:17,443] {logging_mixin.py:109} INFO - [2022-01-31 21:56:17,443] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:18,499] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:18,715] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:56:18,723] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:56:18,755] {logging_mixin.py:109} INFO - [2022-01-31 21:56:18,755] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:56:18,809] {logging_mixin.py:109} INFO - [2022-01-31 21:56:18,809] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:55:16.341989+00:00
[2022-01-31 21:56:18,837] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.396 seconds
[2022-01-31 21:56:53,277] {processor.py:163} INFO - Started process (PID=50025) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:53,278] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:56:53,278] {logging_mixin.py:109} INFO - [2022-01-31 21:56:53,278] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:54,474] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:56:54,610] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:56:54,617] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:56:54,641] {logging_mixin.py:109} INFO - [2022-01-31 21:56:54,641] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:56:54,681] {logging_mixin.py:109} INFO - [2022-01-31 21:56:54,681] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:55:16.341989+00:00
[2022-01-31 21:56:54,721] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.444 seconds
[2022-01-31 21:57:29,547] {processor.py:163} INFO - Started process (PID=50078) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:57:29,547] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:57:29,548] {logging_mixin.py:109} INFO - [2022-01-31 21:57:29,548] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:57:30,824] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:57:30,965] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:57:30,970] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:57:31,001] {logging_mixin.py:109} INFO - [2022-01-31 21:57:31,001] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:57:31,047] {logging_mixin.py:109} INFO - [2022-01-31 21:57:31,046] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:55:16.341989+00:00
[2022-01-31 21:57:31,081] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.535 seconds
[2022-01-31 21:58:05,705] {processor.py:163} INFO - Started process (PID=50142) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:05,706] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:58:05,707] {logging_mixin.py:109} INFO - [2022-01-31 21:58:05,707] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:06,851] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:06,971] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:58:06,975] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:58:06,992] {logging_mixin.py:109} INFO - [2022-01-31 21:58:06,992] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:58:07,028] {logging_mixin.py:109} INFO - [2022-01-31 21:58:07,028] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:55:16.341989+00:00
[2022-01-31 21:58:07,046] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.342 seconds
[2022-01-31 21:58:41,892] {processor.py:163} INFO - Started process (PID=50201) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:41,893] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:58:41,893] {logging_mixin.py:109} INFO - [2022-01-31 21:58:41,893] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:42,954] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:58:43,071] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:58:43,079] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:58:43,138] {logging_mixin.py:109} INFO - [2022-01-31 21:58:43,138] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:58:43,175] {logging_mixin.py:109} INFO - [2022-01-31 21:58:43,175] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:58:16.341989+00:00
[2022-01-31 21:58:43,198] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.307 seconds
[2022-01-31 21:59:17,809] {processor.py:163} INFO - Started process (PID=50257) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:17,810] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:59:17,810] {logging_mixin.py:109} INFO - [2022-01-31 21:59:17,810] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:19,026] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:19,172] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:59:19,180] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:59:19,196] {logging_mixin.py:109} INFO - [2022-01-31 21:59:19,196] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:59:19,239] {logging_mixin.py:109} INFO - [2022-01-31 21:59:19,239] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:58:16.341989+00:00
[2022-01-31 21:59:19,278] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.470 seconds
[2022-01-31 21:59:54,144] {processor.py:163} INFO - Started process (PID=50311) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:54,148] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 21:59:54,148] {logging_mixin.py:109} INFO - [2022-01-31 21:59:54,148] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:55,174] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 21:59:55,287] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:59:55,297] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 21:59:55,319] {logging_mixin.py:109} INFO - [2022-01-31 21:59:55,318] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 21:59:55,351] {logging_mixin.py:109} INFO - [2022-01-31 21:59:55,351] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:58:16.341989+00:00
[2022-01-31 21:59:55,377] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.235 seconds
[2022-01-31 22:00:30,222] {processor.py:163} INFO - Started process (PID=50374) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:00:30,222] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 22:00:30,223] {logging_mixin.py:109} INFO - [2022-01-31 22:00:30,223] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:00:31,453] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:00:31,591] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:00:31,594] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:00:31,603] {logging_mixin.py:109} INFO - [2022-01-31 22:00:31,603] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 22:00:31,650] {logging_mixin.py:109} INFO - [2022-01-31 22:00:31,650] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:58:16.341989+00:00
[2022-01-31 22:00:31,669] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.448 seconds
[2022-01-31 22:01:06,226] {processor.py:163} INFO - Started process (PID=50435) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:06,226] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 22:01:06,227] {logging_mixin.py:109} INFO - [2022-01-31 22:01:06,226] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:07,137] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:07,306] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:01:07,328] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:01:07,343] {logging_mixin.py:109} INFO - [2022-01-31 22:01:07,343] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 22:01:07,387] {logging_mixin.py:109} INFO - [2022-01-31 22:01:07,387] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T21:58:16.341989+00:00
[2022-01-31 22:01:07,412] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.188 seconds
[2022-01-31 22:01:42,243] {processor.py:163} INFO - Started process (PID=50495) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:42,244] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-01-31 22:01:42,244] {logging_mixin.py:109} INFO - [2022-01-31 22:01:42,244] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:43,321] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-01-31 22:01:43,474] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:01:43,478] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-01-31 22:01:43,494] {logging_mixin.py:109} INFO - [2022-01-31 22:01:43,493] {dag.py:2396} INFO - Sync 1 DAGs
[2022-01-31 22:01:43,537] {logging_mixin.py:109} INFO - [2022-01-31 22:01:43,537] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-01-31T22:01:16.341989+00:00
[2022-01-31 22:01:43,570] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.328 seconds
