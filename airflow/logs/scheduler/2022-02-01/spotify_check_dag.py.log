[2022-02-01 16:44:22,965] {processor.py:163} INFO - Started process (PID=92855) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:44:22,965] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:44:22,966] {logging_mixin.py:109} INFO - [2022-02-01 16:44:22,966] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:44:24,176] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:44:24,317] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:44:24,322] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:44:24,334] {logging_mixin.py:109} INFO - [2022-02-01 16:44:24,334] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:44:24,378] {logging_mixin.py:109} INFO - [2022-02-01 16:44:24,378] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:41:24.375936+00:00
[2022-02-01 16:44:24,399] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.436 seconds
[2022-02-01 16:45:00,028] {processor.py:163} INFO - Started process (PID=92917) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:00,028] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:45:00,029] {logging_mixin.py:109} INFO - [2022-02-01 16:45:00,029] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:01,035] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:01,150] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:45:01,155] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:45:01,176] {logging_mixin.py:109} INFO - [2022-02-01 16:45:01,171] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:45:01,215] {logging_mixin.py:109} INFO - [2022-02-01 16:45:01,215] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:44:24.375936+00:00
[2022-02-01 16:45:01,231] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.204 seconds
[2022-02-01 16:45:36,689] {processor.py:163} INFO - Started process (PID=92974) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:36,691] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:45:36,691] {logging_mixin.py:109} INFO - [2022-02-01 16:45:36,691] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:38,292] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:45:38,482] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:45:38,488] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:45:38,507] {logging_mixin.py:109} INFO - [2022-02-01 16:45:38,506] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:45:38,542] {logging_mixin.py:109} INFO - [2022-02-01 16:45:38,542] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:44:24.375936+00:00
[2022-02-01 16:45:38,561] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.873 seconds
[2022-02-01 16:46:13,167] {processor.py:163} INFO - Started process (PID=93026) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:13,167] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:46:13,168] {logging_mixin.py:109} INFO - [2022-02-01 16:46:13,168] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:14,320] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:14,447] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:46:14,453] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:46:14,481] {logging_mixin.py:109} INFO - [2022-02-01 16:46:14,481] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:46:14,518] {logging_mixin.py:109} INFO - [2022-02-01 16:46:14,518] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:44:24.375936+00:00
[2022-02-01 16:46:14,534] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.368 seconds
[2022-02-01 16:46:48,788] {processor.py:163} INFO - Started process (PID=93083) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:48,788] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:46:48,798] {logging_mixin.py:109} INFO - [2022-02-01 16:46:48,798] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:49,937] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:46:50,067] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:46:50,071] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:46:50,088] {logging_mixin.py:109} INFO - [2022-02-01 16:46:50,087] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:46:50,132] {logging_mixin.py:109} INFO - [2022-02-01 16:46:50,132] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:44:24.375936+00:00
[2022-02-01 16:46:50,157] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.371 seconds
[2022-02-01 16:47:24,832] {processor.py:163} INFO - Started process (PID=93145) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:47:24,833] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:47:24,833] {logging_mixin.py:109} INFO - [2022-02-01 16:47:24,833] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:47:25,783] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:47:25,945] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:47:25,949] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:47:25,961] {logging_mixin.py:109} INFO - [2022-02-01 16:47:25,961] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:47:26,003] {logging_mixin.py:109} INFO - [2022-02-01 16:47:26,003] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:44:26.003092+00:00
[2022-02-01 16:47:26,020] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.189 seconds
[2022-02-01 16:48:00,921] {processor.py:163} INFO - Started process (PID=93202) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:00,922] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:48:00,923] {logging_mixin.py:109} INFO - [2022-02-01 16:48:00,922] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:01,954] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:02,115] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:48:02,134] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:48:02,149] {logging_mixin.py:109} INFO - [2022-02-01 16:48:02,149] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:48:02,193] {logging_mixin.py:109} INFO - [2022-02-01 16:48:02,193] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:47:26.003092+00:00
[2022-02-01 16:48:02,209] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.289 seconds
[2022-02-01 16:48:36,977] {processor.py:163} INFO - Started process (PID=93262) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:36,977] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:48:36,978] {logging_mixin.py:109} INFO - [2022-02-01 16:48:36,978] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:37,921] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:48:38,062] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:48:38,066] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:48:38,078] {logging_mixin.py:109} INFO - [2022-02-01 16:48:38,078] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:48:38,112] {logging_mixin.py:109} INFO - [2022-02-01 16:48:38,112] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:47:26.003092+00:00
[2022-02-01 16:48:38,138] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.162 seconds
[2022-02-01 16:49:12,809] {processor.py:163} INFO - Started process (PID=93325) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:12,812] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:49:12,812] {logging_mixin.py:109} INFO - [2022-02-01 16:49:12,812] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:13,831] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:13,991] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:49:13,996] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:49:14,015] {logging_mixin.py:109} INFO - [2022-02-01 16:49:14,014] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:49:14,057] {logging_mixin.py:109} INFO - [2022-02-01 16:49:14,057] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:47:26.003092+00:00
[2022-02-01 16:49:14,079] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.271 seconds
[2022-02-01 16:49:48,518] {processor.py:163} INFO - Started process (PID=93387) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:48,519] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:49:48,519] {logging_mixin.py:109} INFO - [2022-02-01 16:49:48,519] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:49,499] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:49:49,619] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:49:49,625] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:49:49,645] {logging_mixin.py:109} INFO - [2022-02-01 16:49:49,645] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:49:49,687] {logging_mixin.py:109} INFO - [2022-02-01 16:49:49,687] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:47:26.003092+00:00
[2022-02-01 16:49:49,703] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.186 seconds
[2022-02-01 16:50:24,364] {processor.py:163} INFO - Started process (PID=93460) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:50:24,369] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:50:24,370] {logging_mixin.py:109} INFO - [2022-02-01 16:50:24,370] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:50:25,401] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:50:25,535] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:50:25,539] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:50:25,556] {logging_mixin.py:109} INFO - [2022-02-01 16:50:25,556] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:50:25,592] {logging_mixin.py:109} INFO - [2022-02-01 16:50:25,592] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:47:26.003092+00:00
[2022-02-01 16:50:25,616] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.253 seconds
[2022-02-01 16:51:03,171] {processor.py:163} INFO - Started process (PID=93523) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:03,172] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:51:03,172] {logging_mixin.py:109} INFO - [2022-02-01 16:51:03,172] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:04,209] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:04,374] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:51:04,378] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:51:04,394] {logging_mixin.py:109} INFO - [2022-02-01 16:51:04,393] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:51:04,444] {logging_mixin.py:109} INFO - [2022-02-01 16:51:04,444] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:50:26.003092+00:00
[2022-02-01 16:51:04,476] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.306 seconds
[2022-02-01 16:51:29,162] {processor.py:163} INFO - Started process (PID=93609) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:29,163] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:51:29,163] {logging_mixin.py:109} INFO - [2022-02-01 16:51:29,163] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:30,268] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:51:30,386] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:51:30,406] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:51:30,970] {logging_mixin.py:109} INFO - [2022-02-01 16:51:30,969] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:51:31,021] {logging_mixin.py:109} INFO - [2022-02-01 16:51:31,021] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:50:31.020903+00:00
[2022-02-01 16:51:31,045] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.884 seconds
[2022-02-01 16:52:07,063] {processor.py:163} INFO - Started process (PID=93684) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:07,065] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:52:07,072] {logging_mixin.py:109} INFO - [2022-02-01 16:52:07,072] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:08,123] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:08,250] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:52:08,253] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:52:08,274] {logging_mixin.py:109} INFO - [2022-02-01 16:52:08,274] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:52:08,302] {logging_mixin.py:109} INFO - [2022-02-01 16:52:08,302] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:51:31.020903+00:00
[2022-02-01 16:52:08,334] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.272 seconds
[2022-02-01 16:52:45,000] {processor.py:163} INFO - Started process (PID=93751) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:45,000] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:52:45,001] {logging_mixin.py:109} INFO - [2022-02-01 16:52:45,001] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:46,027] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:52:46,141] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:52:46,146] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:52:46,158] {logging_mixin.py:109} INFO - [2022-02-01 16:52:46,157] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:52:46,200] {logging_mixin.py:109} INFO - [2022-02-01 16:52:46,200] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:52:31.020903+00:00
[2022-02-01 16:52:46,216] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.217 seconds
[2022-02-01 16:53:20,846] {processor.py:163} INFO - Started process (PID=93821) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:20,847] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:53:20,847] {logging_mixin.py:109} INFO - [2022-02-01 16:53:20,847] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:21,835] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:21,983] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:53:21,985] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:53:22,006] {logging_mixin.py:109} INFO - [2022-02-01 16:53:22,006] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:53:22,042] {logging_mixin.py:109} INFO - [2022-02-01 16:53:22,041] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:52:31.020903+00:00
[2022-02-01 16:53:22,067] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.221 seconds
[2022-02-01 16:53:56,562] {processor.py:163} INFO - Started process (PID=93885) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:56,563] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:53:56,564] {logging_mixin.py:109} INFO - [2022-02-01 16:53:56,563] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:57,442] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:53:57,562] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:53:57,565] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:53:57,581] {logging_mixin.py:109} INFO - [2022-02-01 16:53:57,581] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:53:57,625] {logging_mixin.py:109} INFO - [2022-02-01 16:53:57,625] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:53:31.020903+00:00
[2022-02-01 16:53:57,653] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.092 seconds
[2022-02-01 16:54:32,182] {processor.py:163} INFO - Started process (PID=93950) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:54:32,183] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:54:32,183] {logging_mixin.py:109} INFO - [2022-02-01 16:54:32,183] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:54:33,081] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:54:33,203] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:54:33,208] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:54:33,224] {logging_mixin.py:109} INFO - [2022-02-01 16:54:33,224] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:54:33,251] {logging_mixin.py:109} INFO - [2022-02-01 16:54:33,251] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:53:33.250963+00:00
[2022-02-01 16:54:33,290] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.121 seconds
[2022-02-01 16:55:08,300] {processor.py:163} INFO - Started process (PID=94015) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:08,300] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:55:08,301] {logging_mixin.py:109} INFO - [2022-02-01 16:55:08,301] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:09,334] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:09,481] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:55:09,485] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:55:09,506] {logging_mixin.py:109} INFO - [2022-02-01 16:55:09,506] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:55:09,543] {logging_mixin.py:109} INFO - [2022-02-01 16:55:09,543] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:54:33.250963+00:00
[2022-02-01 16:55:09,566] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.268 seconds
[2022-02-01 16:55:46,245] {processor.py:163} INFO - Started process (PID=94087) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:46,246] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:55:46,247] {logging_mixin.py:109} INFO - [2022-02-01 16:55:46,247] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:47,341] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:55:47,460] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:55:47,464] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:55:47,484] {logging_mixin.py:109} INFO - [2022-02-01 16:55:47,484] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:55:47,519] {logging_mixin.py:109} INFO - [2022-02-01 16:55:47,519] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:55:33.250963+00:00
[2022-02-01 16:55:47,551] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.307 seconds
[2022-02-01 16:56:22,197] {processor.py:163} INFO - Started process (PID=94160) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:22,198] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:56:22,199] {logging_mixin.py:109} INFO - [2022-02-01 16:56:22,198] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:23,182] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:23,313] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:56:23,317] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:56:23,343] {logging_mixin.py:109} INFO - [2022-02-01 16:56:23,343] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:56:23,372] {logging_mixin.py:109} INFO - [2022-02-01 16:56:23,371] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:55:33.250963+00:00
[2022-02-01 16:56:23,398] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.201 seconds
[2022-02-01 16:56:58,644] {processor.py:163} INFO - Started process (PID=94232) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:58,644] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:56:58,645] {logging_mixin.py:109} INFO - [2022-02-01 16:56:58,645] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:59,661] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:56:59,790] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:56:59,804] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:56:59,816] {logging_mixin.py:109} INFO - [2022-02-01 16:56:59,815] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:56:59,845] {logging_mixin.py:109} INFO - [2022-02-01 16:56:59,845] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:56:33.250963+00:00
[2022-02-01 16:56:59,873] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.230 seconds
[2022-02-01 16:57:34,449] {processor.py:163} INFO - Started process (PID=94295) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:57:34,450] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:57:34,450] {logging_mixin.py:109} INFO - [2022-02-01 16:57:34,450] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:57:35,465] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:57:35,584] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:57:35,588] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:57:35,610] {logging_mixin.py:109} INFO - [2022-02-01 16:57:35,610] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:57:35,649] {logging_mixin.py:109} INFO - [2022-02-01 16:57:35,649] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:56:35.649181+00:00
[2022-02-01 16:57:35,674] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.226 seconds
[2022-02-01 16:58:11,008] {processor.py:163} INFO - Started process (PID=94361) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:11,008] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:58:11,009] {logging_mixin.py:109} INFO - [2022-02-01 16:58:11,009] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:11,939] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:12,063] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:58:12,067] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:58:12,085] {logging_mixin.py:109} INFO - [2022-02-01 16:58:12,085] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:58:12,120] {logging_mixin.py:109} INFO - [2022-02-01 16:58:12,120] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:57:35.649181+00:00
[2022-02-01 16:58:12,146] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.149 seconds
[2022-02-01 16:58:48,430] {processor.py:163} INFO - Started process (PID=94426) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:48,431] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:58:48,431] {logging_mixin.py:109} INFO - [2022-02-01 16:58:48,431] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:49,389] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:58:49,519] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:58:49,523] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:58:49,538] {logging_mixin.py:109} INFO - [2022-02-01 16:58:49,538] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:58:49,577] {logging_mixin.py:109} INFO - [2022-02-01 16:58:49,577] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:58:35.649181+00:00
[2022-02-01 16:58:49,600] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.171 seconds
[2022-02-01 16:59:25,394] {processor.py:163} INFO - Started process (PID=94491) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:59:25,394] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 16:59:25,395] {logging_mixin.py:109} INFO - [2022-02-01 16:59:25,395] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:59:26,543] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 16:59:26,671] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:59:26,678] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 16:59:26,694] {logging_mixin.py:109} INFO - [2022-02-01 16:59:26,693] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 16:59:26,724] {logging_mixin.py:109} INFO - [2022-02-01 16:59:26,724] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:58:35.649181+00:00
[2022-02-01 16:59:26,809] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.417 seconds
[2022-02-01 17:00:02,400] {processor.py:163} INFO - Started process (PID=94547) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:02,401] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:00:02,402] {logging_mixin.py:109} INFO - [2022-02-01 17:00:02,401] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:03,326] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:03,444] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:00:03,448] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:00:03,461] {logging_mixin.py:109} INFO - [2022-02-01 17:00:03,461] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:00:03,511] {logging_mixin.py:109} INFO - [2022-02-01 17:00:03,510] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:59:35.649181+00:00
[2022-02-01 17:00:03,546] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.146 seconds
[2022-02-01 17:00:37,847] {processor.py:163} INFO - Started process (PID=94608) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:37,848] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:00:37,849] {logging_mixin.py:109} INFO - [2022-02-01 17:00:37,848] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:39,556] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:00:39,799] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:00:39,803] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:00:39,832] {logging_mixin.py:109} INFO - [2022-02-01 17:00:39,831] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:00:40,047] {logging_mixin.py:109} INFO - [2022-02-01 17:00:40,047] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T16:59:40.031551+00:00
[2022-02-01 17:00:40,156] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.310 seconds
[2022-02-01 17:01:16,486] {processor.py:163} INFO - Started process (PID=94675) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:16,492] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:01:16,492] {logging_mixin.py:109} INFO - [2022-02-01 17:01:16,492] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:17,670] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:17,786] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:01:17,790] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:01:17,812] {logging_mixin.py:109} INFO - [2022-02-01 17:01:17,812] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:01:17,851] {logging_mixin.py:109} INFO - [2022-02-01 17:01:17,851] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:00:40.031551+00:00
[2022-02-01 17:01:17,877] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.391 seconds
[2022-02-01 17:01:55,608] {processor.py:163} INFO - Started process (PID=94744) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:55,608] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:01:55,609] {logging_mixin.py:109} INFO - [2022-02-01 17:01:55,609] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:56,559] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:01:56,738] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:01:56,744] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:01:56,761] {logging_mixin.py:109} INFO - [2022-02-01 17:01:56,761] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:01:56,807] {logging_mixin.py:109} INFO - [2022-02-01 17:01:56,807] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:01:40.031551+00:00
[2022-02-01 17:01:56,853] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.246 seconds
[2022-02-01 17:02:31,504] {processor.py:163} INFO - Started process (PID=94836) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:02:31,509] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:02:31,510] {logging_mixin.py:109} INFO - [2022-02-01 17:02:31,509] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:02:32,407] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:02:32,537] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:02:32,549] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:02:32,561] {logging_mixin.py:109} INFO - [2022-02-01 17:02:32,561] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:02:32,611] {logging_mixin.py:109} INFO - [2022-02-01 17:02:32,611] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:01:40.031551+00:00
[2022-02-01 17:02:32,636] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.133 seconds
[2022-02-01 17:03:08,055] {processor.py:163} INFO - Started process (PID=94955) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:08,056] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:03:08,057] {logging_mixin.py:109} INFO - [2022-02-01 17:03:08,057] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:09,193] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:09,280] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:03:09,291] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:03:09,323] {logging_mixin.py:109} INFO - [2022-02-01 17:03:09,323] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:03:09,391] {logging_mixin.py:109} INFO - [2022-02-01 17:03:09,391] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:02:40.031551+00:00
[2022-02-01 17:03:09,407] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.353 seconds
[2022-02-01 17:03:44,112] {processor.py:163} INFO - Started process (PID=95032) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:44,112] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:03:44,113] {logging_mixin.py:109} INFO - [2022-02-01 17:03:44,113] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:45,090] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:03:45,218] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:03:45,222] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:03:45,237] {logging_mixin.py:109} INFO - [2022-02-01 17:03:45,236] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:03:45,271] {logging_mixin.py:109} INFO - [2022-02-01 17:03:45,271] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:02:45.271341+00:00
[2022-02-01 17:03:45,311] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.200 seconds
[2022-02-01 17:04:20,788] {processor.py:163} INFO - Started process (PID=95096) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:20,789] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:04:20,789] {logging_mixin.py:109} INFO - [2022-02-01 17:04:20,789] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:21,890] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:22,109] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:04:22,123] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:04:22,142] {logging_mixin.py:109} INFO - [2022-02-01 17:04:22,142] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:04:22,201] {logging_mixin.py:109} INFO - [2022-02-01 17:04:22,201] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:03:45.271341+00:00
[2022-02-01 17:04:22,219] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.431 seconds
[2022-02-01 17:04:58,838] {processor.py:163} INFO - Started process (PID=95159) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:58,838] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:04:58,839] {logging_mixin.py:109} INFO - [2022-02-01 17:04:58,839] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:59,750] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:04:59,883] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:04:59,887] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:04:59,904] {logging_mixin.py:109} INFO - [2022-02-01 17:04:59,903] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:04:59,953] {logging_mixin.py:109} INFO - [2022-02-01 17:04:59,953] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:04:45.271341+00:00
[2022-02-01 17:04:59,971] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.134 seconds
[2022-02-01 17:05:35,118] {processor.py:163} INFO - Started process (PID=95221) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:05:35,119] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:05:35,119] {logging_mixin.py:109} INFO - [2022-02-01 17:05:35,119] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:05:36,058] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:05:36,201] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:05:36,206] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:05:36,220] {logging_mixin.py:109} INFO - [2022-02-01 17:05:36,220] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:05:36,256] {logging_mixin.py:109} INFO - [2022-02-01 17:05:36,255] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:04:45.271341+00:00
[2022-02-01 17:05:36,288] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.171 seconds
[2022-02-01 17:06:11,346] {processor.py:163} INFO - Started process (PID=95283) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:11,347] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:06:11,348] {logging_mixin.py:109} INFO - [2022-02-01 17:06:11,348] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:12,295] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:12,423] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:06:12,427] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:06:12,452] {logging_mixin.py:109} INFO - [2022-02-01 17:06:12,452] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:06:12,496] {logging_mixin.py:109} INFO - [2022-02-01 17:06:12,495] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:05:45.271341+00:00
[2022-02-01 17:06:12,520] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.174 seconds
[2022-02-01 17:06:47,149] {processor.py:163} INFO - Started process (PID=95345) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:47,149] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:06:47,151] {logging_mixin.py:109} INFO - [2022-02-01 17:06:47,150] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:48,082] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:06:48,214] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:06:48,218] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:06:48,238] {logging_mixin.py:109} INFO - [2022-02-01 17:06:48,238] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:06:48,274] {logging_mixin.py:109} INFO - [2022-02-01 17:06:48,274] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:05:48.274336+00:00
[2022-02-01 17:06:48,296] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.148 seconds
[2022-02-01 17:07:23,587] {processor.py:163} INFO - Started process (PID=95404) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:07:23,588] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:07:23,589] {logging_mixin.py:109} INFO - [2022-02-01 17:07:23,588] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:07:24,488] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:07:24,651] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:07:24,654] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:07:24,664] {logging_mixin.py:109} INFO - [2022-02-01 17:07:24,664] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:07:24,706] {logging_mixin.py:109} INFO - [2022-02-01 17:07:24,706] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:06:48.274336+00:00
[2022-02-01 17:07:24,725] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.139 seconds
[2022-02-01 17:08:02,903] {processor.py:163} INFO - Started process (PID=95471) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:02,903] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:08:02,904] {logging_mixin.py:109} INFO - [2022-02-01 17:08:02,904] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:03,817] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:03,947] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:08:03,951] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:08:03,963] {logging_mixin.py:109} INFO - [2022-02-01 17:08:03,962] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:08:04,010] {logging_mixin.py:109} INFO - [2022-02-01 17:08:04,009] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:07:48.274336+00:00
[2022-02-01 17:08:04,046] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.144 seconds
[2022-02-01 17:08:39,175] {processor.py:163} INFO - Started process (PID=95536) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:39,176] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:08:39,177] {logging_mixin.py:109} INFO - [2022-02-01 17:08:39,177] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:40,379] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:08:40,516] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:08:40,522] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:08:40,544] {logging_mixin.py:109} INFO - [2022-02-01 17:08:40,544] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:08:40,581] {logging_mixin.py:109} INFO - [2022-02-01 17:08:40,581] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:07:48.274336+00:00
[2022-02-01 17:08:40,608] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.434 seconds
[2022-02-01 17:09:15,058] {processor.py:163} INFO - Started process (PID=95596) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:15,059] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:09:15,059] {logging_mixin.py:109} INFO - [2022-02-01 17:09:15,059] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:16,169] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:16,303] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:09:16,308] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:09:16,331] {logging_mixin.py:109} INFO - [2022-02-01 17:09:16,331] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:09:16,358] {logging_mixin.py:109} INFO - [2022-02-01 17:09:16,358] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:08:48.274336+00:00
[2022-02-01 17:09:16,382] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.325 seconds
[2022-02-01 17:09:50,846] {processor.py:163} INFO - Started process (PID=95658) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:50,847] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:09:50,847] {logging_mixin.py:109} INFO - [2022-02-01 17:09:50,847] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:51,837] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:09:51,953] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:09:51,968] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:09:51,980] {logging_mixin.py:109} INFO - [2022-02-01 17:09:51,980] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:09:52,018] {logging_mixin.py:109} INFO - [2022-02-01 17:09:52,018] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:08:52.018431+00:00
[2022-02-01 17:09:52,050] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.205 seconds
[2022-02-01 17:10:26,715] {processor.py:163} INFO - Started process (PID=95721) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:10:26,716] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:10:26,717] {logging_mixin.py:109} INFO - [2022-02-01 17:10:26,717] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:10:27,707] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:10:27,889] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:10:27,897] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:10:27,909] {logging_mixin.py:109} INFO - [2022-02-01 17:10:27,909] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:10:27,945] {logging_mixin.py:109} INFO - [2022-02-01 17:10:27,945] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:09:52.018431+00:00
[2022-02-01 17:10:27,974] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.260 seconds
[2022-02-01 17:11:06,076] {processor.py:163} INFO - Started process (PID=95787) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:06,076] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:11:06,077] {logging_mixin.py:109} INFO - [2022-02-01 17:11:06,076] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:07,132] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:07,268] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:11:07,273] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:11:07,290] {logging_mixin.py:109} INFO - [2022-02-01 17:11:07,290] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:11:07,337] {logging_mixin.py:109} INFO - [2022-02-01 17:11:07,337] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:10:52.018431+00:00
[2022-02-01 17:11:07,368] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.294 seconds
[2022-02-01 17:11:42,215] {processor.py:163} INFO - Started process (PID=95846) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:42,215] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:11:42,216] {logging_mixin.py:109} INFO - [2022-02-01 17:11:42,216] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:43,190] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:11:43,313] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:11:43,317] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:11:43,335] {logging_mixin.py:109} INFO - [2022-02-01 17:11:43,335] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:11:43,375] {logging_mixin.py:109} INFO - [2022-02-01 17:11:43,375] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:10:52.018431+00:00
[2022-02-01 17:11:43,400] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.188 seconds
[2022-02-01 17:12:18,424] {processor.py:163} INFO - Started process (PID=95907) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:18,424] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:12:18,425] {logging_mixin.py:109} INFO - [2022-02-01 17:12:18,425] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:19,582] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:19,725] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:12:19,729] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:12:19,751] {logging_mixin.py:109} INFO - [2022-02-01 17:12:19,751] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:12:19,821] {logging_mixin.py:109} INFO - [2022-02-01 17:12:19,821] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:11:52.018431+00:00
[2022-02-01 17:12:19,877] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.454 seconds
[2022-02-01 17:12:54,249] {processor.py:163} INFO - Started process (PID=95970) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:54,250] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:12:54,255] {logging_mixin.py:109} INFO - [2022-02-01 17:12:54,255] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:55,314] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:12:55,431] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:12:55,443] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:12:55,458] {logging_mixin.py:109} INFO - [2022-02-01 17:12:55,457] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:12:55,490] {logging_mixin.py:109} INFO - [2022-02-01 17:12:55,490] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:11:55.489867+00:00
[2022-02-01 17:12:55,516] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.268 seconds
[2022-02-01 17:13:30,060] {processor.py:163} INFO - Started process (PID=96032) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:13:30,061] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:13:30,061] {logging_mixin.py:109} INFO - [2022-02-01 17:13:30,061] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:13:30,991] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:13:31,144] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:13:31,149] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:13:31,169] {logging_mixin.py:109} INFO - [2022-02-01 17:13:31,169] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:13:31,211] {logging_mixin.py:109} INFO - [2022-02-01 17:13:31,211] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:12:55.489867+00:00
[2022-02-01 17:13:31,237] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.178 seconds
[2022-02-01 17:14:08,667] {processor.py:163} INFO - Started process (PID=96099) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:08,667] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:14:08,668] {logging_mixin.py:109} INFO - [2022-02-01 17:14:08,668] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:09,629] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:09,766] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:14:09,773] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:14:09,789] {logging_mixin.py:109} INFO - [2022-02-01 17:14:09,788] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:14:09,833] {logging_mixin.py:109} INFO - [2022-02-01 17:14:09,833] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:13:55.489867+00:00
[2022-02-01 17:14:09,857] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.191 seconds
[2022-02-01 17:14:44,729] {processor.py:163} INFO - Started process (PID=96160) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:44,729] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:14:44,730] {logging_mixin.py:109} INFO - [2022-02-01 17:14:44,730] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:45,636] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:14:45,753] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:14:45,758] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:14:45,781] {logging_mixin.py:109} INFO - [2022-02-01 17:14:45,778] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:14:45,810] {logging_mixin.py:109} INFO - [2022-02-01 17:14:45,810] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:13:55.489867+00:00
[2022-02-01 17:14:45,846] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.119 seconds
[2022-02-01 17:15:20,519] {processor.py:163} INFO - Started process (PID=96221) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:20,519] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:15:20,520] {logging_mixin.py:109} INFO - [2022-02-01 17:15:20,520] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:21,429] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:21,554] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:15:21,558] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:15:21,598] {logging_mixin.py:109} INFO - [2022-02-01 17:15:21,597] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:15:21,652] {logging_mixin.py:109} INFO - [2022-02-01 17:15:21,652] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:14:55.489867+00:00
[2022-02-01 17:15:21,673] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.155 seconds
[2022-02-01 17:15:56,315] {processor.py:163} INFO - Started process (PID=96283) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:56,316] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:15:56,317] {logging_mixin.py:109} INFO - [2022-02-01 17:15:56,317] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:57,332] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:15:57,478] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:15:57,490] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:15:57,514] {logging_mixin.py:109} INFO - [2022-02-01 17:15:57,513] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:15:57,561] {logging_mixin.py:109} INFO - [2022-02-01 17:15:57,561] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:14:57.560758+00:00
[2022-02-01 17:15:57,591] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.277 seconds
[2022-02-01 17:16:32,999] {processor.py:163} INFO - Started process (PID=96343) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:16:32,999] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:16:33,000] {logging_mixin.py:109} INFO - [2022-02-01 17:16:33,000] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:16:33,959] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:16:34,091] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:16:34,095] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:16:34,110] {logging_mixin.py:109} INFO - [2022-02-01 17:16:34,110] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:16:34,150] {logging_mixin.py:109} INFO - [2022-02-01 17:16:34,150] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:15:57.560758+00:00
[2022-02-01 17:16:34,184] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.187 seconds
[2022-02-01 17:17:10,840] {processor.py:163} INFO - Started process (PID=96402) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:10,841] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:17:10,842] {logging_mixin.py:109} INFO - [2022-02-01 17:17:10,841] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:12,064] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:12,200] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:17:12,204] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:17:12,216] {logging_mixin.py:109} INFO - [2022-02-01 17:17:12,216] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:17:12,244] {logging_mixin.py:109} INFO - [2022-02-01 17:17:12,244] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:16:57.560758+00:00
[2022-02-01 17:17:12,269] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.430 seconds
[2022-02-01 17:17:47,147] {processor.py:163} INFO - Started process (PID=96476) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:47,148] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:17:47,148] {logging_mixin.py:109} INFO - [2022-02-01 17:17:47,148] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:48,148] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:17:48,269] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:17:48,274] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:17:48,285] {logging_mixin.py:109} INFO - [2022-02-01 17:17:48,285] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:17:48,337] {logging_mixin.py:109} INFO - [2022-02-01 17:17:48,337] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:16:57.560758+00:00
[2022-02-01 17:17:48,359] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.213 seconds
[2022-02-01 17:18:23,345] {processor.py:163} INFO - Started process (PID=96547) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:18:23,346] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:18:23,346] {logging_mixin.py:109} INFO - [2022-02-01 17:18:23,346] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:18:24,433] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:18:24,586] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:18:24,590] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:18:24,602] {logging_mixin.py:109} INFO - [2022-02-01 17:18:24,602] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:18:24,647] {logging_mixin.py:109} INFO - [2022-02-01 17:18:24,647] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:17:57.560758+00:00
[2022-02-01 17:18:24,683] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.339 seconds
[2022-02-01 17:18:59,011] {processor.py:163} INFO - Started process (PID=96607) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:18:59,012] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:18:59,012] {logging_mixin.py:109} INFO - [2022-02-01 17:18:59,012] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:19:00,009] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:19:00,184] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:19:00,189] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:19:00,214] {logging_mixin.py:109} INFO - [2022-02-01 17:19:00,213] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:19:00,249] {logging_mixin.py:109} INFO - [2022-02-01 17:19:00,248] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:18:00.248659+00:00
[2022-02-01 17:19:00,275] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.264 seconds
[2022-02-01 17:19:35,581] {processor.py:163} INFO - Started process (PID=96685) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:19:35,585] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:19:35,586] {logging_mixin.py:109} INFO - [2022-02-01 17:19:35,586] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:19:36,529] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:19:36,661] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:19:36,666] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:19:36,674] {logging_mixin.py:109} INFO - [2022-02-01 17:19:36,674] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:19:36,727] {logging_mixin.py:109} INFO - [2022-02-01 17:19:36,727] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:19:00.248659+00:00
[2022-02-01 17:19:36,746] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.166 seconds
[2022-02-01 17:20:13,966] {processor.py:163} INFO - Started process (PID=96784) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:13,967] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:20:13,967] {logging_mixin.py:109} INFO - [2022-02-01 17:20:13,967] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:14,865] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:15,001] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:20:15,005] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:20:15,016] {logging_mixin.py:109} INFO - [2022-02-01 17:20:15,015] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:20:15,051] {logging_mixin.py:109} INFO - [2022-02-01 17:20:15,050] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:20:00.248659+00:00
[2022-02-01 17:20:15,077] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.112 seconds
[2022-02-01 17:20:50,131] {processor.py:163} INFO - Started process (PID=96891) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:50,131] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:20:50,133] {logging_mixin.py:109} INFO - [2022-02-01 17:20:50,132] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:51,312] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:20:51,509] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:20:51,514] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:20:51,557] {logging_mixin.py:109} INFO - [2022-02-01 17:20:51,549] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:20:51,606] {logging_mixin.py:109} INFO - [2022-02-01 17:20:51,606] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:20:00.248659+00:00
[2022-02-01 17:20:51,638] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.508 seconds
[2022-02-01 17:21:27,075] {processor.py:163} INFO - Started process (PID=96990) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:21:27,076] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:21:27,077] {logging_mixin.py:109} INFO - [2022-02-01 17:21:27,077] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:21:28,045] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:21:28,190] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:21:28,194] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:21:28,206] {logging_mixin.py:109} INFO - [2022-02-01 17:21:28,206] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:21:28,243] {logging_mixin.py:109} INFO - [2022-02-01 17:21:28,243] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:21:00.248659+00:00
[2022-02-01 17:21:28,270] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.196 seconds
[2022-02-01 17:22:02,838] {processor.py:163} INFO - Started process (PID=97100) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:02,838] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:22:02,840] {logging_mixin.py:109} INFO - [2022-02-01 17:22:02,840] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:03,967] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:04,130] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:22:04,149] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:22:04,214] {logging_mixin.py:109} INFO - [2022-02-01 17:22:04,214] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:22:04,289] {logging_mixin.py:109} INFO - [2022-02-01 17:22:04,288] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:21:04.288751+00:00
[2022-02-01 17:22:04,310] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.473 seconds
[2022-02-01 17:22:39,060] {processor.py:163} INFO - Started process (PID=97197) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:39,061] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:22:39,062] {logging_mixin.py:109} INFO - [2022-02-01 17:22:39,062] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:40,135] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:22:40,269] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:22:40,277] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:22:40,296] {logging_mixin.py:109} INFO - [2022-02-01 17:22:40,295] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:22:40,327] {logging_mixin.py:109} INFO - [2022-02-01 17:22:40,327] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:22:04.288751+00:00
[2022-02-01 17:22:40,357] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.298 seconds
[2022-02-01 17:23:17,691] {processor.py:163} INFO - Started process (PID=97302) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:17,691] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:23:17,692] {logging_mixin.py:109} INFO - [2022-02-01 17:23:17,692] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:18,940] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:19,070] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:23:19,073] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:23:19,092] {logging_mixin.py:109} INFO - [2022-02-01 17:23:19,092] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:23:19,135] {logging_mixin.py:109} INFO - [2022-02-01 17:23:19,135] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:23:04.288751+00:00
[2022-02-01 17:23:19,153] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.464 seconds
[2022-02-01 17:23:53,805] {processor.py:163} INFO - Started process (PID=97425) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:53,805] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:23:53,806] {logging_mixin.py:109} INFO - [2022-02-01 17:23:53,806] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:54,835] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:23:54,967] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:23:54,976] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:23:54,989] {logging_mixin.py:109} INFO - [2022-02-01 17:23:54,989] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:23:55,034] {logging_mixin.py:109} INFO - [2022-02-01 17:23:55,034] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:23:04.288751+00:00
[2022-02-01 17:23:55,070] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.267 seconds
[2022-02-01 17:24:29,607] {processor.py:163} INFO - Started process (PID=97546) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:24:29,607] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:24:29,608] {logging_mixin.py:109} INFO - [2022-02-01 17:24:29,608] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:24:30,636] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:24:30,777] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:24:30,783] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:24:30,794] {logging_mixin.py:109} INFO - [2022-02-01 17:24:30,793] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:24:30,863] {logging_mixin.py:109} INFO - [2022-02-01 17:24:30,863] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:24:04.288751+00:00
[2022-02-01 17:24:30,895] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.289 seconds
[2022-02-01 17:25:05,112] {processor.py:163} INFO - Started process (PID=97653) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:05,113] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:25:05,113] {logging_mixin.py:109} INFO - [2022-02-01 17:25:05,113] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:06,146] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:06,283] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:25:06,289] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:25:06,316] {logging_mixin.py:109} INFO - [2022-02-01 17:25:06,305] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:25:06,361] {logging_mixin.py:109} INFO - [2022-02-01 17:25:06,361] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:24:06.360816+00:00
[2022-02-01 17:25:06,395] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.284 seconds
[2022-02-01 17:25:41,348] {processor.py:163} INFO - Started process (PID=97730) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:41,349] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:25:41,349] {logging_mixin.py:109} INFO - [2022-02-01 17:25:41,349] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:42,637] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:25:42,756] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:25:42,763] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:25:42,780] {logging_mixin.py:109} INFO - [2022-02-01 17:25:42,780] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:25:42,824] {logging_mixin.py:109} INFO - [2022-02-01 17:25:42,824] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:25:06.360816+00:00
[2022-02-01 17:25:42,843] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.496 seconds
[2022-02-01 17:26:22,656] {processor.py:163} INFO - Started process (PID=97787) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:26:22,657] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:26:22,658] {logging_mixin.py:109} INFO - [2022-02-01 17:26:22,658] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:26:23,750] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:26:23,886] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:26:23,890] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:26:23,902] {logging_mixin.py:109} INFO - [2022-02-01 17:26:23,901] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:26:23,942] {logging_mixin.py:109} INFO - [2022-02-01 17:26:23,942] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:26:06.360816+00:00
[2022-02-01 17:26:23,966] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.311 seconds
[2022-02-01 17:26:59,585] {processor.py:163} INFO - Started process (PID=97836) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:26:59,585] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:26:59,586] {logging_mixin.py:109} INFO - [2022-02-01 17:26:59,586] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:27:00,679] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:27:00,831] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:27:00,835] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:27:00,848] {logging_mixin.py:109} INFO - [2022-02-01 17:27:00,847] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:27:00,901] {logging_mixin.py:109} INFO - [2022-02-01 17:27:00,901] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:26:06.360816+00:00
[2022-02-01 17:27:00,924] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.341 seconds
[2022-02-01 17:27:35,699] {processor.py:163} INFO - Started process (PID=97893) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:27:35,701] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:27:35,702] {logging_mixin.py:109} INFO - [2022-02-01 17:27:35,702] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:27:36,744] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:27:36,881] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:27:36,885] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:27:36,903] {logging_mixin.py:109} INFO - [2022-02-01 17:27:36,903] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:27:36,941] {logging_mixin.py:109} INFO - [2022-02-01 17:27:36,941] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:27:06.360816+00:00
[2022-02-01 17:27:36,964] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.267 seconds
[2022-02-01 17:28:11,163] {processor.py:163} INFO - Started process (PID=97956) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:11,164] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:28:11,164] {logging_mixin.py:109} INFO - [2022-02-01 17:28:11,164] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:12,206] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:12,331] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:28:12,335] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:28:12,347] {logging_mixin.py:109} INFO - [2022-02-01 17:28:12,347] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:28:12,393] {logging_mixin.py:109} INFO - [2022-02-01 17:28:12,393] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:27:12.393569+00:00
[2022-02-01 17:28:12,416] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.254 seconds
[2022-02-01 17:28:47,109] {processor.py:163} INFO - Started process (PID=98015) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:47,110] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:28:47,110] {logging_mixin.py:109} INFO - [2022-02-01 17:28:47,110] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:47,991] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:28:48,266] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:28:48,270] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:28:48,299] {logging_mixin.py:109} INFO - [2022-02-01 17:28:48,298] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:28:48,340] {logging_mixin.py:109} INFO - [2022-02-01 17:28:48,340] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:28:12.393569+00:00
[2022-02-01 17:28:48,357] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.249 seconds
[2022-02-01 17:29:25,893] {processor.py:163} INFO - Started process (PID=98082) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:29:25,893] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:29:25,894] {logging_mixin.py:109} INFO - [2022-02-01 17:29:25,894] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:29:26,834] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:29:26,973] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:29:26,978] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:29:27,002] {logging_mixin.py:109} INFO - [2022-02-01 17:29:27,001] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:29:27,039] {logging_mixin.py:109} INFO - [2022-02-01 17:29:27,039] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:29:12.393569+00:00
[2022-02-01 17:29:27,068] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.176 seconds
[2022-02-01 17:30:01,997] {processor.py:163} INFO - Started process (PID=98146) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:01,998] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:30:01,998] {logging_mixin.py:109} INFO - [2022-02-01 17:30:01,998] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:03,147] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:03,288] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:30:03,292] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:30:03,302] {logging_mixin.py:109} INFO - [2022-02-01 17:30:03,302] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:30:03,374] {logging_mixin.py:109} INFO - [2022-02-01 17:30:03,374] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:29:12.393569+00:00
[2022-02-01 17:30:03,400] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.404 seconds
[2022-02-01 17:30:37,688] {processor.py:163} INFO - Started process (PID=98207) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:37,689] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:30:37,690] {logging_mixin.py:109} INFO - [2022-02-01 17:30:37,690] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:38,574] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:30:38,702] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:30:38,705] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:30:38,718] {logging_mixin.py:109} INFO - [2022-02-01 17:30:38,718] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:30:38,766] {logging_mixin.py:109} INFO - [2022-02-01 17:30:38,766] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:30:12.393569+00:00
[2022-02-01 17:30:38,790] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.102 seconds
[2022-02-01 17:31:13,865] {processor.py:163} INFO - Started process (PID=98268) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:13,866] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:31:13,866] {logging_mixin.py:109} INFO - [2022-02-01 17:31:13,866] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:15,018] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:15,151] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:31:15,155] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:31:15,176] {logging_mixin.py:109} INFO - [2022-02-01 17:31:15,176] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:31:15,211] {logging_mixin.py:109} INFO - [2022-02-01 17:31:15,211] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:30:15.211314+00:00
[2022-02-01 17:31:15,236] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.373 seconds
[2022-02-01 17:31:50,561] {processor.py:163} INFO - Started process (PID=98319) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:50,561] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:31:50,567] {logging_mixin.py:109} INFO - [2022-02-01 17:31:50,567] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:51,683] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:31:51,813] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:31:51,817] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:31:51,832] {logging_mixin.py:109} INFO - [2022-02-01 17:31:51,831] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:31:51,868] {logging_mixin.py:109} INFO - [2022-02-01 17:31:51,868] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:31:15.211314+00:00
[2022-02-01 17:31:51,885] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.325 seconds
[2022-02-01 17:32:32,729] {processor.py:163} INFO - Started process (PID=98379) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:32:32,730] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:32:32,730] {logging_mixin.py:109} INFO - [2022-02-01 17:32:32,730] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:32:33,668] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:32:33,822] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:32:33,835] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:32:33,853] {logging_mixin.py:109} INFO - [2022-02-01 17:32:33,853] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:32:33,909] {logging_mixin.py:109} INFO - [2022-02-01 17:32:33,909] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:32:15.211314+00:00
[2022-02-01 17:32:33,933] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.205 seconds
[2022-02-01 17:33:08,778] {processor.py:163} INFO - Started process (PID=98543) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:08,779] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:33:08,780] {logging_mixin.py:109} INFO - [2022-02-01 17:33:08,780] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:09,809] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:10,003] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:33:10,012] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:33:10,027] {logging_mixin.py:109} INFO - [2022-02-01 17:33:10,026] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:33:10,071] {logging_mixin.py:109} INFO - [2022-02-01 17:33:10,071] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:32:15.211314+00:00
[2022-02-01 17:33:10,105] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.328 seconds
[2022-02-01 17:33:45,070] {processor.py:163} INFO - Started process (PID=98661) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:45,070] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:33:45,071] {logging_mixin.py:109} INFO - [2022-02-01 17:33:45,071] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:46,047] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:33:46,163] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:33:46,174] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:33:46,190] {logging_mixin.py:109} INFO - [2022-02-01 17:33:46,190] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:33:46,227] {logging_mixin.py:109} INFO - [2022-02-01 17:33:46,226] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:33:15.211314+00:00
[2022-02-01 17:33:46,253] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.185 seconds
[2022-02-01 17:34:34,526] {processor.py:163} INFO - Started process (PID=98724) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:34:34,527] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:34:34,528] {logging_mixin.py:109} INFO - [2022-02-01 17:34:34,528] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:34:35,876] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:34:36,043] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:34:36,054] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:34:36,070] {logging_mixin.py:109} INFO - [2022-02-01 17:34:36,070] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:34:36,102] {logging_mixin.py:109} INFO - [2022-02-01 17:34:36,102] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:34:15.211314+00:00
[2022-02-01 17:34:36,133] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.608 seconds
[2022-02-01 17:35:11,810] {processor.py:163} INFO - Started process (PID=98773) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:11,810] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:35:11,811] {logging_mixin.py:109} INFO - [2022-02-01 17:35:11,811] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:13,156] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:13,365] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:35:13,370] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:35:13,383] {logging_mixin.py:109} INFO - [2022-02-01 17:35:13,382] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:35:13,422] {logging_mixin.py:109} INFO - [2022-02-01 17:35:13,422] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:34:15.211314+00:00
[2022-02-01 17:35:13,464] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.654 seconds
[2022-02-01 17:35:49,490] {processor.py:163} INFO - Started process (PID=98822) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:49,491] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:35:49,491] {logging_mixin.py:109} INFO - [2022-02-01 17:35:49,491] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:50,862] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:35:51,054] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:35:51,059] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:35:51,079] {logging_mixin.py:109} INFO - [2022-02-01 17:35:51,078] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:35:51,115] {logging_mixin.py:109} INFO - [2022-02-01 17:35:51,115] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:35:15.211314+00:00
[2022-02-01 17:35:51,141] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.654 seconds
[2022-02-01 17:36:37,306] {processor.py:163} INFO - Started process (PID=98876) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:36:37,307] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:36:37,307] {logging_mixin.py:109} INFO - [2022-02-01 17:36:37,307] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:36:38,986] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:36:39,292] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:36:39,355] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:36:39,368] {logging_mixin.py:109} INFO - [2022-02-01 17:36:39,366] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:36:39,440] {logging_mixin.py:109} INFO - [2022-02-01 17:36:39,439] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:36:15.211314+00:00
[2022-02-01 17:36:39,465] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.160 seconds
[2022-02-01 17:37:16,826] {processor.py:163} INFO - Started process (PID=98922) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:16,827] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:37:16,827] {logging_mixin.py:109} INFO - [2022-02-01 17:37:16,827] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:18,067] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:18,213] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:37:18,218] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:37:18,239] {logging_mixin.py:109} INFO - [2022-02-01 17:37:18,235] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:37:18,276] {logging_mixin.py:109} INFO - [2022-02-01 17:37:18,275] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:36:18.275550+00:00
[2022-02-01 17:37:18,311] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.486 seconds
[2022-02-01 17:37:56,312] {processor.py:163} INFO - Started process (PID=98968) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:56,312] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:37:56,313] {logging_mixin.py:109} INFO - [2022-02-01 17:37:56,313] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:57,530] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:37:57,672] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:37:57,678] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:37:57,695] {logging_mixin.py:109} INFO - [2022-02-01 17:37:57,695] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:37:57,755] {logging_mixin.py:109} INFO - [2022-02-01 17:37:57,755] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:37:18.275550+00:00
[2022-02-01 17:37:57,785] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.500 seconds
[2022-02-01 17:38:36,189] {processor.py:163} INFO - Started process (PID=99021) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:38:36,190] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:38:36,191] {logging_mixin.py:109} INFO - [2022-02-01 17:38:36,191] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:38:37,514] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:38:37,681] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:38:37,686] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:38:37,703] {logging_mixin.py:109} INFO - [2022-02-01 17:38:37,702] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:38:37,729] {logging_mixin.py:109} INFO - [2022-02-01 17:38:37,729] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:38:18.275550+00:00
[2022-02-01 17:38:37,778] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.590 seconds
[2022-02-01 17:39:13,422] {processor.py:163} INFO - Started process (PID=99075) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:13,423] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:39:13,423] {logging_mixin.py:109} INFO - [2022-02-01 17:39:13,423] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:14,803] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:14,949] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:39:14,953] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:39:14,965] {logging_mixin.py:109} INFO - [2022-02-01 17:39:14,965] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:39:15,007] {logging_mixin.py:109} INFO - [2022-02-01 17:39:15,007] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:38:18.275550+00:00
[2022-02-01 17:39:15,030] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.611 seconds
[2022-02-01 17:39:51,199] {processor.py:163} INFO - Started process (PID=99115) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:51,200] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:39:51,200] {logging_mixin.py:109} INFO - [2022-02-01 17:39:51,200] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:52,514] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:39:52,625] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:39:52,629] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:39:52,668] {logging_mixin.py:109} INFO - [2022-02-01 17:39:52,667] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:39:52,722] {logging_mixin.py:109} INFO - [2022-02-01 17:39:52,722] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:39:18.275550+00:00
[2022-02-01 17:39:52,756] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.558 seconds
[2022-02-01 17:40:36,271] {processor.py:163} INFO - Started process (PID=99174) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:40:36,271] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:40:36,275] {logging_mixin.py:109} INFO - [2022-02-01 17:40:36,275] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:40:37,487] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:40:37,628] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:40:37,633] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:40:37,654] {logging_mixin.py:109} INFO - [2022-02-01 17:40:37,653] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:40:37,699] {logging_mixin.py:109} INFO - [2022-02-01 17:40:37,699] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:40:18.275550+00:00
[2022-02-01 17:40:37,735] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.465 seconds
[2022-02-01 17:41:12,985] {processor.py:163} INFO - Started process (PID=99224) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:12,985] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:41:12,986] {logging_mixin.py:109} INFO - [2022-02-01 17:41:12,986] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:14,090] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:14,278] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:41:14,283] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:41:14,303] {logging_mixin.py:109} INFO - [2022-02-01 17:41:14,302] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:41:14,342] {logging_mixin.py:109} INFO - [2022-02-01 17:41:14,342] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:40:18.275550+00:00
[2022-02-01 17:41:14,378] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.394 seconds
[2022-02-01 17:41:51,119] {processor.py:163} INFO - Started process (PID=99271) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:51,120] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:41:51,121] {logging_mixin.py:109} INFO - [2022-02-01 17:41:51,121] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:53,573] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:41:53,851] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:41:53,867] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:41:53,915] {logging_mixin.py:109} INFO - [2022-02-01 17:41:53,914] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:41:53,975] {logging_mixin.py:109} INFO - [2022-02-01 17:41:53,975] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:41:18.275550+00:00
[2022-02-01 17:41:54,012] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.895 seconds
[2022-02-01 17:42:35,528] {processor.py:163} INFO - Started process (PID=99345) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:42:35,528] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:42:35,529] {logging_mixin.py:109} INFO - [2022-02-01 17:42:35,529] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:42:36,799] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:42:36,958] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:42:36,962] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:42:36,975] {logging_mixin.py:109} INFO - [2022-02-01 17:42:36,975] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:42:37,014] {logging_mixin.py:109} INFO - [2022-02-01 17:42:37,013] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:42:18.275550+00:00
[2022-02-01 17:42:37,045] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.518 seconds
[2022-02-01 17:43:12,177] {processor.py:163} INFO - Started process (PID=99396) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:12,178] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:43:12,179] {logging_mixin.py:109} INFO - [2022-02-01 17:43:12,179] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:13,263] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:13,384] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:43:13,392] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:43:13,412] {logging_mixin.py:109} INFO - [2022-02-01 17:43:13,411] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:43:13,450] {logging_mixin.py:109} INFO - [2022-02-01 17:43:13,450] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:42:18.275550+00:00
[2022-02-01 17:43:13,473] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.296 seconds
[2022-02-01 17:43:49,640] {processor.py:163} INFO - Started process (PID=99458) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:49,641] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:43:49,642] {logging_mixin.py:109} INFO - [2022-02-01 17:43:49,642] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:50,987] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:43:51,119] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:43:51,125] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:43:51,140] {logging_mixin.py:109} INFO - [2022-02-01 17:43:51,139] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:43:51,196] {logging_mixin.py:109} INFO - [2022-02-01 17:43:51,195] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:43:18.275550+00:00
[2022-02-01 17:43:51,210] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.570 seconds
[2022-02-01 17:44:35,311] {processor.py:163} INFO - Started process (PID=99527) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:44:35,312] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:44:35,313] {logging_mixin.py:109} INFO - [2022-02-01 17:44:35,313] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:44:36,498] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:44:36,681] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:44:36,702] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:44:36,739] {logging_mixin.py:109} INFO - [2022-02-01 17:44:36,739] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:44:36,777] {logging_mixin.py:109} INFO - [2022-02-01 17:44:36,777] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:44:18.275550+00:00
[2022-02-01 17:44:36,806] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.496 seconds
[2022-02-01 17:45:12,675] {processor.py:163} INFO - Started process (PID=99600) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:12,676] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:45:12,677] {logging_mixin.py:109} INFO - [2022-02-01 17:45:12,676] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:14,152] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:14,312] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:45:14,329] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:45:14,341] {logging_mixin.py:109} INFO - [2022-02-01 17:45:14,341] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:45:14,376] {logging_mixin.py:109} INFO - [2022-02-01 17:45:14,376] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:44:18.275550+00:00
[2022-02-01 17:45:14,401] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.727 seconds
[2022-02-01 17:45:49,666] {processor.py:163} INFO - Started process (PID=99663) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:49,666] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:45:49,667] {logging_mixin.py:109} INFO - [2022-02-01 17:45:49,667] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:50,695] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:45:50,832] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:45:50,836] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:45:50,856] {logging_mixin.py:109} INFO - [2022-02-01 17:45:50,856] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:45:50,891] {logging_mixin.py:109} INFO - [2022-02-01 17:45:50,891] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:45:18.275550+00:00
[2022-02-01 17:45:50,906] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.242 seconds
[2022-02-01 17:46:36,361] {processor.py:163} INFO - Started process (PID=99743) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:46:36,364] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:46:36,365] {logging_mixin.py:109} INFO - [2022-02-01 17:46:36,365] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:46:37,611] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:46:37,798] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:46:37,803] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:46:37,826] {logging_mixin.py:109} INFO - [2022-02-01 17:46:37,826] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:46:37,870] {logging_mixin.py:109} INFO - [2022-02-01 17:46:37,869] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:46:18.275550+00:00
[2022-02-01 17:46:37,904] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.551 seconds
[2022-02-01 17:47:13,855] {processor.py:163} INFO - Started process (PID=99796) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:13,855] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:47:13,856] {logging_mixin.py:109} INFO - [2022-02-01 17:47:13,856] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:15,397] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:15,556] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:47:15,563] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:47:15,577] {logging_mixin.py:109} INFO - [2022-02-01 17:47:15,577] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:47:15,613] {logging_mixin.py:109} INFO - [2022-02-01 17:47:15,613] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:46:18.275550+00:00
[2022-02-01 17:47:15,637] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.783 seconds
[2022-02-01 17:47:50,947] {processor.py:163} INFO - Started process (PID=99859) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:50,947] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:47:50,948] {logging_mixin.py:109} INFO - [2022-02-01 17:47:50,948] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:51,956] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:47:52,137] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:47:52,151] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:47:52,170] {logging_mixin.py:109} INFO - [2022-02-01 17:47:52,170] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:47:52,200] {logging_mixin.py:109} INFO - [2022-02-01 17:47:52,200] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:47:18.275550+00:00
[2022-02-01 17:47:52,222] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.276 seconds
[2022-02-01 17:48:31,231] {processor.py:163} INFO - Started process (PID=99935) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:48:31,232] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:48:31,232] {logging_mixin.py:109} INFO - [2022-02-01 17:48:31,232] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:48:32,269] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:48:32,385] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:48:32,390] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:48:32,404] {logging_mixin.py:109} INFO - [2022-02-01 17:48:32,404] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:48:32,462] {logging_mixin.py:109} INFO - [2022-02-01 17:48:32,462] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:48:18.275550+00:00
[2022-02-01 17:48:32,487] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.261 seconds
[2022-02-01 17:49:08,852] {processor.py:163} INFO - Started process (PID=105) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:08,852] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:49:08,853] {logging_mixin.py:109} INFO - [2022-02-01 17:49:08,853] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:09,938] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:10,123] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:49:10,127] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:49:10,151] {logging_mixin.py:109} INFO - [2022-02-01 17:49:10,150] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:49:10,286] {logging_mixin.py:109} INFO - [2022-02-01 17:49:10,285] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:48:18.275550+00:00
[2022-02-01 17:49:10,328] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.477 seconds
[2022-02-01 17:49:47,532] {processor.py:163} INFO - Started process (PID=177) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:47,532] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:49:47,533] {logging_mixin.py:109} INFO - [2022-02-01 17:49:47,533] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:48,753] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:49:48,987] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:49:48,993] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:49:49,049] {logging_mixin.py:109} INFO - [2022-02-01 17:49:49,049] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:49:49,098] {logging_mixin.py:109} INFO - [2022-02-01 17:49:49,098] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:49:18.275550+00:00
[2022-02-01 17:49:49,140] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.609 seconds
[2022-02-01 17:50:38,964] {processor.py:163} INFO - Started process (PID=255) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:50:38,965] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:50:38,965] {logging_mixin.py:109} INFO - [2022-02-01 17:50:38,965] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:50:40,054] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:50:40,211] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:50:40,223] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:50:40,235] {logging_mixin.py:109} INFO - [2022-02-01 17:50:40,234] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:50:40,283] {logging_mixin.py:109} INFO - [2022-02-01 17:50:40,283] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:50:18.275550+00:00
[2022-02-01 17:50:40,300] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.337 seconds
[2022-02-01 17:51:15,532] {processor.py:163} INFO - Started process (PID=341) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:15,557] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:51:15,559] {logging_mixin.py:109} INFO - [2022-02-01 17:51:15,558] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:16,697] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:16,814] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:51:16,818] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:51:16,834] {logging_mixin.py:109} INFO - [2022-02-01 17:51:16,834] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:51:16,880] {logging_mixin.py:109} INFO - [2022-02-01 17:51:16,879] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:50:18.275550+00:00
[2022-02-01 17:51:16,897] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.366 seconds
[2022-02-01 17:51:52,315] {processor.py:163} INFO - Started process (PID=485) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:52,318] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:51:52,319] {logging_mixin.py:109} INFO - [2022-02-01 17:51:52,319] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:53,384] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:51:53,515] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:51:53,519] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:51:53,537] {logging_mixin.py:109} INFO - [2022-02-01 17:51:53,537] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:51:53,579] {logging_mixin.py:109} INFO - [2022-02-01 17:51:53,578] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:51:18.275550+00:00
[2022-02-01 17:51:53,594] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.280 seconds
[2022-02-01 17:52:32,043] {processor.py:163} INFO - Started process (PID=592) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:52:32,043] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:52:32,044] {logging_mixin.py:109} INFO - [2022-02-01 17:52:32,044] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:52:33,034] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:52:33,200] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:52:33,205] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:52:33,224] {logging_mixin.py:109} INFO - [2022-02-01 17:52:33,224] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:52:33,263] {logging_mixin.py:109} INFO - [2022-02-01 17:52:33,263] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:52:18.275550+00:00
[2022-02-01 17:52:33,282] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.240 seconds
[2022-02-01 17:53:09,740] {processor.py:163} INFO - Started process (PID=680) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:09,740] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:53:09,741] {logging_mixin.py:109} INFO - [2022-02-01 17:53:09,741] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:10,756] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:10,889] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:53:10,892] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:53:10,915] {logging_mixin.py:109} INFO - [2022-02-01 17:53:10,915] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:53:10,962] {logging_mixin.py:109} INFO - [2022-02-01 17:53:10,962] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:52:18.275550+00:00
[2022-02-01 17:53:10,979] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.241 seconds
[2022-02-01 17:53:46,059] {processor.py:163} INFO - Started process (PID=742) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:46,060] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:53:46,069] {logging_mixin.py:109} INFO - [2022-02-01 17:53:46,069] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:47,010] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:53:47,186] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:53:47,191] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:53:47,211] {logging_mixin.py:109} INFO - [2022-02-01 17:53:47,211] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:53:47,251] {logging_mixin.py:109} INFO - [2022-02-01 17:53:47,251] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:53:18.275550+00:00
[2022-02-01 17:53:47,266] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.208 seconds
[2022-02-01 17:54:21,979] {processor.py:163} INFO - Started process (PID=811) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:54:21,979] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:54:21,980] {logging_mixin.py:109} INFO - [2022-02-01 17:54:21,980] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:54:23,054] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:54:23,190] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:54:23,197] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:54:23,211] {logging_mixin.py:109} INFO - [2022-02-01 17:54:23,210] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:54:23,263] {logging_mixin.py:109} INFO - [2022-02-01 17:54:23,263] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:53:23.263353+00:00
[2022-02-01 17:54:23,285] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.308 seconds
[2022-02-01 17:55:06,316] {processor.py:163} INFO - Started process (PID=892) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:06,316] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:55:06,317] {logging_mixin.py:109} INFO - [2022-02-01 17:55:06,317] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:08,642] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:08,872] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:55:08,877] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:55:08,908] {logging_mixin.py:109} INFO - [2022-02-01 17:55:08,908] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:55:08,946] {logging_mixin.py:109} INFO - [2022-02-01 17:55:08,946] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:54:23.263353+00:00
[2022-02-01 17:55:08,964] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 2.649 seconds
[2022-02-01 17:55:50,908] {processor.py:163} INFO - Started process (PID=991) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:50,909] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:55:50,910] {logging_mixin.py:109} INFO - [2022-02-01 17:55:50,910] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:52,037] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:55:52,194] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:55:52,199] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:55:52,210] {logging_mixin.py:109} INFO - [2022-02-01 17:55:52,209] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:55:52,243] {logging_mixin.py:109} INFO - [2022-02-01 17:55:52,243] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:55:23.263353+00:00
[2022-02-01 17:55:52,277] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.370 seconds
[2022-02-01 17:56:26,858] {processor.py:163} INFO - Started process (PID=1054) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:56:26,859] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:56:26,859] {logging_mixin.py:109} INFO - [2022-02-01 17:56:26,859] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:56:28,061] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:56:28,188] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:56:28,197] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:56:28,206] {logging_mixin.py:109} INFO - [2022-02-01 17:56:28,205] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:56:28,239] {logging_mixin.py:109} INFO - [2022-02-01 17:56:28,239] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:55:28.239352+00:00
[2022-02-01 17:56:28,264] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.408 seconds
[2022-02-01 17:57:03,179] {processor.py:163} INFO - Started process (PID=1108) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:03,180] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:57:03,181] {logging_mixin.py:109} INFO - [2022-02-01 17:57:03,181] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:04,091] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:04,227] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:57:04,231] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:57:04,257] {logging_mixin.py:109} INFO - [2022-02-01 17:57:04,257] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:57:04,295] {logging_mixin.py:109} INFO - [2022-02-01 17:57:04,295] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:56:28.239352+00:00
[2022-02-01 17:57:04,322] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.144 seconds
[2022-02-01 17:57:42,008] {processor.py:163} INFO - Started process (PID=1173) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:42,009] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:57:42,010] {logging_mixin.py:109} INFO - [2022-02-01 17:57:42,009] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:42,911] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:57:43,041] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:57:43,045] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:57:43,057] {logging_mixin.py:109} INFO - [2022-02-01 17:57:43,057] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:57:43,099] {logging_mixin.py:109} INFO - [2022-02-01 17:57:43,099] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:57:28.239352+00:00
[2022-02-01 17:57:43,120] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.114 seconds
[2022-02-01 17:58:17,112] {processor.py:163} INFO - Started process (PID=1231) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:17,112] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:58:17,113] {logging_mixin.py:109} INFO - [2022-02-01 17:58:17,113] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:18,030] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:18,197] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:58:18,203] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:58:18,215] {logging_mixin.py:109} INFO - [2022-02-01 17:58:18,215] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:58:18,265] {logging_mixin.py:109} INFO - [2022-02-01 17:58:18,265] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:57:28.239352+00:00
[2022-02-01 17:58:18,290] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.179 seconds
[2022-02-01 17:58:57,789] {processor.py:163} INFO - Started process (PID=1289) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:57,789] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:58:57,790] {logging_mixin.py:109} INFO - [2022-02-01 17:58:57,790] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:59,090] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:58:59,232] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:58:59,241] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:58:59,254] {logging_mixin.py:109} INFO - [2022-02-01 17:58:59,253] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:58:59,307] {logging_mixin.py:109} INFO - [2022-02-01 17:58:59,307] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:58:28.239352+00:00
[2022-02-01 17:58:59,325] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.537 seconds
[2022-02-01 17:59:44,465] {processor.py:163} INFO - Started process (PID=1365) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:59:44,465] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 17:59:44,466] {logging_mixin.py:109} INFO - [2022-02-01 17:59:44,466] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:59:45,702] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 17:59:45,861] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:59:45,872] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 17:59:45,900] {logging_mixin.py:109} INFO - [2022-02-01 17:59:45,899] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 17:59:45,946] {logging_mixin.py:109} INFO - [2022-02-01 17:59:45,946] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:59:28.239352+00:00
[2022-02-01 17:59:45,966] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.502 seconds
[2022-02-01 18:00:21,070] {processor.py:163} INFO - Started process (PID=1415) to work on /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 18:00:21,077] {processor.py:642} INFO - Processing file /Users/user/Youtubed/dags/spotify_check_dag.py for tasks to queue
[2022-02-01 18:00:21,080] {logging_mixin.py:109} INFO - [2022-02-01 18:00:21,079] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 18:00:22,170] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/Youtubed/dags/spotify_check_dag.py
[2022-02-01 18:00:22,256] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 18:00:22,261] {logging_mixin.py:109} WARNING - /Users/user/Youtubed/YTVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-01 18:00:22,268] {logging_mixin.py:109} INFO - [2022-02-01 18:00:22,268] {dag.py:2396} INFO - Sync 1 DAGs
[2022-02-01 18:00:22,309] {logging_mixin.py:109} INFO - [2022-02-01 18:00:22,309] {dag.py:2935} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-01T17:59:28.239352+00:00
[2022-02-01 18:00:22,327] {processor.py:171} INFO - Processing /Users/user/Youtubed/dags/spotify_check_dag.py took 1.257 seconds
